Unity Editor version:    2020.3.20f1 (41c4e627c95f)
Branch:                  2020.3/staging
Build type:              Release
Batch mode:              YES
macOS version:           Version 12.1 (Build 21C52)
Darwin version:          21.2.0
Architecture:            x86_64
Running under Rosetta:   YES
Available memory:        16384 MB
Using pre-set license
Pro License: NO

COMMAND LINE ARGUMENTS:
/Applications/Unity/Hub/Editor/2020.3.20f1/Unity.app/Contents/MacOS/Unity
-adb2
-batchMode
-noUpm
-name
AssetImportWorker0
-projectPath
/Users/angeladematte/Desktop/InventorySystem
-logFile
Logs/AssetImportWorker0.log
-srvPort
57250
Successfully changed project path to: /Users/angeladematte/Desktop/InventorySystem
/Users/angeladematte/Desktop/InventorySystem
Using Asset Import Pipeline V2.
Refreshing native plugins compatible for Editor in 89.04 ms, found 3 plugins.
Preloading 0 native plugins for Editor in 0.00 ms.
Initialize engine version: 2020.3.20f1 (41c4e627c95f)
[Subsystems] Discovering subsystems at path /Applications/Unity/Hub/Editor/2020.3.20f1/Unity.app/Contents/Resources/UnitySubsystems
[Subsystems] Discovering subsystems at path /Users/angeladematte/Desktop/InventorySystem/Assets
GfxDevice: creating device client; threaded=0
2022-10-14 12:14:38.171 Unity[39410:508699] (null) preferred device: Apple M1 (high power)
2022-10-14 12:14:38.171 Unity[39410:508699] Metal devices available: 1
2022-10-14 12:14:38.171 Unity[39410:508699] 0: Apple M1 (high power)
2022-10-14 12:14:38.173 Unity[39410:508699] Using device Apple M1 (high power)
Initializing Metal device caps: Apple M1
Initialize mono
Mono path[0] = '/Applications/Unity/Hub/Editor/2020.3.20f1/Unity.app/Contents/Managed'
Mono path[1] = '/Applications/Unity/Hub/Editor/2020.3.20f1/Unity.app/Contents/MonoBleedingEdge/lib/mono/unityjit'
Mono config path = '/Applications/Unity/Hub/Editor/2020.3.20f1/Unity.app/Contents/MonoBleedingEdge/etc'
Using monoOptions --debugger-agent=transport=dt_socket,embedding=1,server=y,suspend=n,address=127.0.0.1:56410
Begin MonoManager ReloadAssembly
Registering precompiled unity dll's ...
Register platform support module: /Applications/Unity/Hub/Editor/2020.3.20f1/Unity.app/Contents/PlaybackEngines/MacStandaloneSupport/UnityEditor.OSXStandalone.Extensions.dll
Registered in 0.001941 seconds.
Native extension for OSXStandalone target not found
Refreshing native plugins compatible for Editor in 46.48 ms, found 3 plugins.
Preloading 0 native plugins for Editor in 0.00 ms.
Mono: successfully reloaded assembly
- Completed reload, in  4.148 seconds
Domain Reload Profiling:
	ReloadAssembly (4149ms)
		BeginReloadAssembly (78ms)
			ExecutionOrderSort (0ms)
			DisableScriptedObjects (0ms)
			BackupInstance (0ms)
			ReleaseScriptingObjects (0ms)
			CreateAndSetChildDomain (3ms)
		EndReloadAssembly (905ms)
			LoadAssemblies (75ms)
			RebuildTransferFunctionScriptingTraits (0ms)
			SetupTypeCache (180ms)
			ReleaseScriptCaches (0ms)
			RebuildScriptCaches (39ms)
			SetupLoadedEditorAssemblies (532ms)
				LogAssemblyErrors (0ms)
				InitializePlatformSupportModulesInManaged (10ms)
				SetLoadedEditorAssemblies (1ms)
				RefreshPlugins (47ms)
				BeforeProcessingInitializeOnLoad (71ms)
				ProcessInitializeOnLoadAttributes (300ms)
				ProcessInitializeOnLoadMethodAttributes (103ms)
				AfterProcessingInitializeOnLoad (0ms)
				EditorAssembliesLoaded (1ms)
			ExecutionOrderSort2 (0ms)
			AwakeInstancesAfterBackupRestoration (0ms)
Platform modules already initialized, skipping
Registering precompiled user dll's ...
Registered in 0.003519 seconds.
Begin MonoManager ReloadAssembly
Native extension for OSXStandalone target not found
Refreshing native plugins compatible for Editor in 45.67 ms, found 3 plugins.
Preloading 0 native plugins for Editor in 0.00 ms.
Mono: successfully reloaded assembly
- Completed reload, in  2.269 seconds
Domain Reload Profiling:
	ReloadAssembly (2272ms)
		BeginReloadAssembly (250ms)
			ExecutionOrderSort (0ms)
			DisableScriptedObjects (33ms)
			BackupInstance (0ms)
			ReleaseScriptingObjects (0ms)
			CreateAndSetChildDomain (31ms)
		EndReloadAssembly (1931ms)
			LoadAssemblies (198ms)
			RebuildTransferFunctionScriptingTraits (0ms)
			SetupTypeCache (351ms)
			ReleaseScriptCaches (0ms)
			RebuildScriptCaches (55ms)
			SetupLoadedEditorAssemblies (1018ms)
				LogAssemblyErrors (0ms)
				InitializePlatformSupportModulesInManaged (10ms)
				SetLoadedEditorAssemblies (0ms)
				RefreshPlugins (46ms)
				BeforeProcessingInitializeOnLoad (178ms)
				ProcessInitializeOnLoadAttributes (730ms)
				ProcessInitializeOnLoadMethodAttributes (51ms)
				AfterProcessingInitializeOnLoad (1ms)
				EditorAssembliesLoaded (0ms)
			ExecutionOrderSort2 (0ms)
			AwakeInstancesAfterBackupRestoration (32ms)
Platform modules already initialized, skipping
Validating Project structure ... 0.001067 seconds.
Shader import version has changed; will reimport all shaders...
Upgrading shader files ...0.011198 seconds.
Application.AssetDatabase Initial Script Refresh Start
RefreshInfo: InitialScriptRefreshV2(NoUpdateAssetOptions) scanfilter:  ... 1 filters
RefreshProfiler: Total: 0.000ms
Application.AssetDatabase Initial Script Refresh End
Application.AssetDatabase.Refresh Start
Application.AssetDatabase.Refresh End
RefreshInfo: StopAssetImportingV2(ForceSynchronousImport) scanfilter: 
RefreshProfiler: Total: 0.000ms
Launching external process: /Applications/Unity/Hub/Editor/2020.3.20f1/Unity.app/Contents/Tools/UnityShaderCompiler
Launched and connected shader compiler UnityShaderCompiler after 0.03 seconds
Initializing Unity extensions:
2022-10-14 12:14:45.819 Unity[39410:508699] NSEventModifierFlagFunction specified to -setKeyEquivalentModifierMask: for item <NSMenuItem: 0x600003c1d2d0 Font Asset, ke='Command-F12'>, but is only supported for system-provided menu items; will not be used
2022-10-14 12:14:45.823 Unity[39410:508699] NSEventModifierFlagFunction specified to -setKeyEquivalentModifierMask: for item <NSMenuItem: 0x600003ce9340 Font Asset, ke='Command-F12'>, but is only supported for system-provided menu items; will not be used
========================================================================
Worker process is ready to serve import requests
Refreshing native plugins compatible for Editor in 0.43 ms, found 3 plugins.
Preloading 0 native plugins for Editor in 0.00 ms.
Unloading 2322 Unused Serialized files (Serialized files now loaded: 0)
System memory in use before: 210.2 MB.
System memory in use after: 209.4 MB.

Unloading 122 unused Assets to reduce memory usage. Loaded Objects now: 2782.
Total: 2.688792 ms (FindLiveObjects: 0.135958 ms CreateObjectMapping: 0.047125 ms MarkObjects: 2.087625 ms  DeleteObjects: 0.417333 ms)

AssetImportParameters requested are different than current active one (requested -> active):
  custom:video-decoder-ogg-theora: a1e56fd34408186e4bbccfd4996cb3dc -> 
  custom:container-muxer-webm: aa71ff27fc2769a1b78a27578f13a17b -> 
  custom:container-demuxer-webm: 4f35f7cbe854078d1ac9338744f61a02 -> 
  custom:container-demuxer-ogg: 62fdf1f143b41e24485cea50d1cbac27 -> 
  custom:video-encoder-webm-vp8: eb34c28f22e8b96e1ab97ce403110664 -> 
  custom:framework-osx-AVFoundation: e770b220cccbd017edd2c1fefb359320 -> 
  custom:video-decoder-webm-vp8: 9c59270c3fd7afecdb556c50c9e8de78 -> 
  custom:audio-decoder-ogg-vorbis: bf7c407c2cedff20999df2af8eb42d56 -> 
  custom:audio-encoder-webm-vorbis: bf7c407c2cedff20999df2af8eb42d56 -> 
========================================================================
Received Import Request.
  path: Assets/Resources/Prefabs/Slot.prefab
  artifactKey: Guid(06a12056aef3f458ea896a90f397357c) Importer(815301076,1909f56bfc062723c751e8b465ee728b)
Start importing Assets/Resources/Prefabs/Slot.prefab using Guid(06a12056aef3f458ea896a90f397357c) Importer(815301076,1909f56bfc062723c751e8b465ee728b)  -> (artifact id: '00000000000000000000000000000000') in 0.611364 seconds  code(4) message(Build asset version error: assets/resources/prefabs/slot.prefab in SourceAssetDB has modification time of '2022-10-14T08:02:03Z' while content on disk has modification time of '2022-10-14T11:14:46Z')
  ERROR: Build asset version error: assets/resources/prefabs/slot.prefab in SourceAssetDB has modification time of '2022-10-14T08:02:03Z' while content on disk has modification time of '2022-10-14T11:14:46Z'
  Import took 0.614784 seconds .

========================================================================
Received Import Request.
  Time since last request: 0.020280 seconds.
  path: Assets/Resources/Prefabs/Slot.prefab
  artifactKey: Guid(06a12056aef3f458ea896a90f397357c) Importer(815301076,1909f56bfc062723c751e8b465ee728b)
Start importing Assets/Resources/Prefabs/Slot.prefab using Guid(06a12056aef3f458ea896a90f397357c) Importer(815301076,1909f56bfc062723c751e8b465ee728b)  -> (artifact id: '00000000000000000000000000000000') in 0.011143 seconds  code(4) message(Build asset version error: assets/resources/prefabs/slot.prefab in SourceAssetDB has modification time of '2022-10-14T08:02:03Z' while content on disk has modification time of '2022-10-14T11:14:46Z')
  ERROR: Build asset version error: assets/resources/prefabs/slot.prefab in SourceAssetDB has modification time of '2022-10-14T08:02:03Z' while content on disk has modification time of '2022-10-14T11:14:46Z'
  Import took 0.014199 seconds .

========================================================================
Received Import Request.
  Time since last request: 3.994295 seconds.
  path: Assets/Resources/Prefabs/Slot.prefab
  artifactKey: Guid(06a12056aef3f458ea896a90f397357c) Importer(815301076,1909f56bfc062723c751e8b465ee728b)
Start importing Assets/Resources/Prefabs/Slot.prefab using Guid(06a12056aef3f458ea896a90f397357c) Importer(815301076,1909f56bfc062723c751e8b465ee728b)  -> (artifact id: '00000000000000000000000000000000') in 0.010402 seconds  code(4) message(Build asset version error: assets/resources/prefabs/slot.prefab in SourceAssetDB has modification time of '2022-10-14T08:02:03Z' while content on disk has modification time of '2022-10-14T11:14:46Z')
  ERROR: Build asset version error: assets/resources/prefabs/slot.prefab in SourceAssetDB has modification time of '2022-10-14T08:02:03Z' while content on disk has modification time of '2022-10-14T11:14:46Z'
  Import took 0.014155 seconds .

========================================================================
Received Import Request.
  Time since last request: 6.442274 seconds.
  path: Assets/Resources/Prefabs/Slot.prefab
  artifactKey: Guid(06a12056aef3f458ea896a90f397357c) Importer(815301076,1909f56bfc062723c751e8b465ee728b)
Start importing Assets/Resources/Prefabs/Slot.prefab using Guid(06a12056aef3f458ea896a90f397357c) Importer(815301076,1909f56bfc062723c751e8b465ee728b)  -> (artifact id: '00000000000000000000000000000000') in 0.007061 seconds  code(4) message(Build asset version error: assets/resources/prefabs/slot.prefab in SourceAssetDB has modification time of '2022-10-14T08:02:03Z' while content on disk has modification time of '2022-10-14T11:14:46Z')
  ERROR: Build asset version error: assets/resources/prefabs/slot.prefab in SourceAssetDB has modification time of '2022-10-14T08:02:03Z' while content on disk has modification time of '2022-10-14T11:14:46Z'
  Import took 0.021010 seconds .

========================================================================
Received Prepare
Registering precompiled user dll's ...
Registered in 0.004242 seconds.
Begin MonoManager ReloadAssembly
Native extension for OSXStandalone target not found
Refreshing native plugins compatible for Editor in 0.59 ms, found 3 plugins.
Preloading 0 native plugins for Editor in 0.00 ms.
2022-10-14 12:15:43.727 Unity[39410:508699] NSEventModifierFlagFunction specified to -setKeyEquivalentModifierMask: for item <NSMenuItem: 0x600003c102a0 Font Asset, ke='Command-F12'>, but is only supported for system-provided menu items; will not be used
Mono: successfully reloaded assembly
- Completed reload, in  2.453 seconds
Domain Reload Profiling:
	ReloadAssembly (2454ms)
		BeginReloadAssembly (236ms)
			ExecutionOrderSort (0ms)
			DisableScriptedObjects (40ms)
			BackupInstance (0ms)
			ReleaseScriptingObjects (0ms)
			CreateAndSetChildDomain (85ms)
		EndReloadAssembly (2120ms)
			LoadAssemblies (205ms)
			RebuildTransferFunctionScriptingTraits (0ms)
			SetupTypeCache (372ms)
			ReleaseScriptCaches (1ms)
			RebuildScriptCaches (52ms)
			SetupLoadedEditorAssemblies (1176ms)
				LogAssemblyErrors (0ms)
				InitializePlatformSupportModulesInManaged (15ms)
				SetLoadedEditorAssemblies (2ms)
				RefreshPlugins (1ms)
				BeforeProcessingInitializeOnLoad (254ms)
				ProcessInitializeOnLoadAttributes (855ms)
				ProcessInitializeOnLoadMethodAttributes (48ms)
				AfterProcessingInitializeOnLoad (1ms)
				EditorAssembliesLoaded (0ms)
			ExecutionOrderSort2 (0ms)
			AwakeInstancesAfterBackupRestoration (48ms)
Platform modules already initialized, skipping
Switching build target platform(2) subTarget(0) extendedPlatform(0) -> platform(13) subTarget(537395200) extendedPlatform(0)
Refreshing native plugins compatible for Editor in 0.58 ms, found 3 plugins.
Preloading 0 native plugins for Editor in 0.00 ms.
Unloading 2300 Unused Serialized files (Serialized files now loaded: 0)
System memory in use before: 210.3 MB.
System memory in use after: 210.5 MB.

Unloading 31 unused Assets to reduce memory usage. Loaded Objects now: 2785.
Total: 2.487667 ms (FindLiveObjects: 0.235417 ms CreateObjectMapping: 0.047959 ms MarkObjects: 2.179875 ms  DeleteObjects: 0.023583 ms)

AssetImportParameters requested are different than current active one (requested -> active):
  custom:video-decoder-ogg-theora: a1e56fd34408186e4bbccfd4996cb3dc -> 
  custom:container-muxer-webm: aa71ff27fc2769a1b78a27578f13a17b -> 
  custom:container-demuxer-webm: 4f35f7cbe854078d1ac9338744f61a02 -> 
  custom:container-demuxer-ogg: 62fdf1f143b41e24485cea50d1cbac27 -> 
  custom:video-encoder-webm-vp8: eb34c28f22e8b96e1ab97ce403110664 -> 
  custom:framework-osx-AVFoundation: e770b220cccbd017edd2c1fefb359320 -> 
  custom:video-decoder-webm-vp8: 9c59270c3fd7afecdb556c50c9e8de78 -> 
  custom:graphics/normal-map-encoding: 01000000000000000000000000000000 -> 02000000000000000000000000000000
  custom:audio-decoder-ogg-vorbis: bf7c407c2cedff20999df2af8eb42d56 -> 
  custom:audio-encoder-webm-vorbis: bf7c407c2cedff20999df2af8eb42d56 -> 
========================================================================
Received Prepare
Registering precompiled user dll's ...
Registered in 0.001468 seconds.
Begin MonoManager ReloadAssembly
Native extension for OSXStandalone target not found
Refreshing native plugins compatible for Editor in 0.52 ms, found 3 plugins.
Preloading 0 native plugins for Editor in 0.00 ms.
2022-10-14 12:15:51.089 Unity[39410:508699] NSEventModifierFlagFunction specified to -setKeyEquivalentModifierMask: for item <NSMenuItem: 0x600003c11500 Font Asset, ke='Command-F12'>, but is only supported for system-provided menu items; will not be used
Mono: successfully reloaded assembly
- Completed reload, in  2.286 seconds
Domain Reload Profiling:
	ReloadAssembly (2287ms)
		BeginReloadAssembly (205ms)
			ExecutionOrderSort (0ms)
			DisableScriptedObjects (38ms)
			BackupInstance (0ms)
			ReleaseScriptingObjects (0ms)
			CreateAndSetChildDomain (63ms)
		EndReloadAssembly (1988ms)
			LoadAssemblies (182ms)
			RebuildTransferFunctionScriptingTraits (0ms)
			SetupTypeCache (349ms)
			ReleaseScriptCaches (1ms)
			RebuildScriptCaches (52ms)
			SetupLoadedEditorAssemblies (1119ms)
				LogAssemblyErrors (0ms)
				InitializePlatformSupportModulesInManaged (30ms)
				SetLoadedEditorAssemblies (2ms)
				RefreshPlugins (15ms)
				BeforeProcessingInitializeOnLoad (259ms)
				ProcessInitializeOnLoadAttributes (774ms)
				ProcessInitializeOnLoadMethodAttributes (38ms)
				AfterProcessingInitializeOnLoad (1ms)
				EditorAssembliesLoaded (0ms)
			ExecutionOrderSort2 (0ms)
			AwakeInstancesAfterBackupRestoration (42ms)
Platform modules already initialized, skipping
Switching build target platform(2) subTarget(0) extendedPlatform(0) -> platform(13) subTarget(537395200) extendedPlatform(0)
Refreshing native plugins compatible for Editor in 0.51 ms, found 3 plugins.
Preloading 0 native plugins for Editor in 0.00 ms.
Unloading 2300 Unused Serialized files (Serialized files now loaded: 0)
System memory in use before: 210.5 MB.
System memory in use after: 210.7 MB.

Unloading 30 unused Assets to reduce memory usage. Loaded Objects now: 2787.
Total: 2.346042 ms (FindLiveObjects: 0.164708 ms CreateObjectMapping: 0.049334 ms MarkObjects: 2.112166 ms  DeleteObjects: 0.019042 ms)

AssetImportParameters requested are different than current active one (requested -> active):
  custom:video-decoder-ogg-theora: a1e56fd34408186e4bbccfd4996cb3dc -> 
  custom:container-muxer-webm: aa71ff27fc2769a1b78a27578f13a17b -> 
  custom:container-demuxer-webm: 4f35f7cbe854078d1ac9338744f61a02 -> 
  custom:container-demuxer-ogg: 62fdf1f143b41e24485cea50d1cbac27 -> 
  custom:video-encoder-webm-vp8: eb34c28f22e8b96e1ab97ce403110664 -> 
  custom:framework-osx-AVFoundation: e770b220cccbd017edd2c1fefb359320 -> 
  custom:video-decoder-webm-vp8: 9c59270c3fd7afecdb556c50c9e8de78 -> 
  custom:graphics/normal-map-encoding: 01000000000000000000000000000000 -> 02000000000000000000000000000000
  custom:audio-decoder-ogg-vorbis: bf7c407c2cedff20999df2af8eb42d56 -> 
  custom:audio-encoder-webm-vorbis: bf7c407c2cedff20999df2af8eb42d56 -> 
========================================================================
Received Import Request.
  Time since last request: 55.126514 seconds.
  path: Assets/Resources/Prefabs/Slot.prefab
  artifactKey: Guid(06a12056aef3f458ea896a90f397357c) Importer(815301076,1909f56bfc062723c751e8b465ee728b)
Start importing Assets/Resources/Prefabs/Slot.prefab using Guid(06a12056aef3f458ea896a90f397357c) Importer(815301076,1909f56bfc062723c751e8b465ee728b)  -> (artifact id: '00000000000000000000000000000000') in 0.133894 seconds  code(4) message(Build asset version error: assets/resources/prefabs/slot.prefab in SourceAssetDB has modification time of '2022-10-14T08:02:03Z' while content on disk has modification time of '2022-10-14T11:14:46Z')
  ERROR: Build asset version error: assets/resources/prefabs/slot.prefab in SourceAssetDB has modification time of '2022-10-14T08:02:03Z' while content on disk has modification time of '2022-10-14T11:14:46Z'
  Import took 0.137071 seconds .

========================================================================
Received Import Request.
  Time since last request: 4.655201 seconds.
  path: Assets/Resources/Prefabs/Slot.prefab
  artifactKey: Guid(06a12056aef3f458ea896a90f397357c) Importer(815301076,1909f56bfc062723c751e8b465ee728b)
Start importing Assets/Resources/Prefabs/Slot.prefab using Guid(06a12056aef3f458ea896a90f397357c) Importer(815301076,1909f56bfc062723c751e8b465ee728b)  -> (artifact id: '00000000000000000000000000000000') in 0.010498 seconds  code(4) message(Build asset version error: assets/resources/prefabs/slot.prefab in SourceAssetDB has modification time of '2022-10-14T08:02:03Z' while content on disk has modification time of '2022-10-14T11:14:46Z')
  ERROR: Build asset version error: assets/resources/prefabs/slot.prefab in SourceAssetDB has modification time of '2022-10-14T08:02:03Z' while content on disk has modification time of '2022-10-14T11:14:46Z'
  Import took 0.013365 seconds .

========================================================================
Received Prepare
Registering precompiled user dll's ...
Registered in 0.006220 seconds.
Begin MonoManager ReloadAssembly
Native extension for OSXStandalone target not found
Refreshing native plugins compatible for Editor in 0.55 ms, found 3 plugins.
Preloading 0 native plugins for Editor in 0.00 ms.
2022-10-14 12:16:35.160 Unity[39410:508699] NSEventModifierFlagFunction specified to -setKeyEquivalentModifierMask: for item <NSMenuItem: 0x600003c32fb0 Font Asset, ke='Command-F12'>, but is only supported for system-provided menu items; will not be used
Mono: successfully reloaded assembly
- Completed reload, in  2.362 seconds
Domain Reload Profiling:
	ReloadAssembly (2363ms)
		BeginReloadAssembly (256ms)
			ExecutionOrderSort (0ms)
			DisableScriptedObjects (44ms)
			BackupInstance (0ms)
			ReleaseScriptingObjects (0ms)
			CreateAndSetChildDomain (95ms)
		EndReloadAssembly (2011ms)
			LoadAssemblies (204ms)
			RebuildTransferFunctionScriptingTraits (0ms)
			SetupTypeCache (359ms)
			ReleaseScriptCaches (1ms)
			RebuildScriptCaches (54ms)
			SetupLoadedEditorAssemblies (1100ms)
				LogAssemblyErrors (0ms)
				InitializePlatformSupportModulesInManaged (15ms)
				SetLoadedEditorAssemblies (2ms)
				RefreshPlugins (1ms)
				BeforeProcessingInitializeOnLoad (268ms)
				ProcessInitializeOnLoadAttributes (774ms)
				ProcessInitializeOnLoadMethodAttributes (40ms)
				AfterProcessingInitializeOnLoad (1ms)
				EditorAssembliesLoaded (0ms)
			ExecutionOrderSort2 (0ms)
			AwakeInstancesAfterBackupRestoration (41ms)
Platform modules already initialized, skipping
Switching build target platform(2) subTarget(0) extendedPlatform(0) -> platform(13) subTarget(537395200) extendedPlatform(0)
Refreshing native plugins compatible for Editor in 0.46 ms, found 3 plugins.
Preloading 0 native plugins for Editor in 0.00 ms.
Unloading 2300 Unused Serialized files (Serialized files now loaded: 0)
System memory in use before: 210.7 MB.
System memory in use after: 211.0 MB.

Unloading 30 unused Assets to reduce memory usage. Loaded Objects now: 2789.
Total: 2.281417 ms (FindLiveObjects: 0.128833 ms CreateObjectMapping: 0.058000 ms MarkObjects: 2.074625 ms  DeleteObjects: 0.019125 ms)

AssetImportParameters requested are different than current active one (requested -> active):
  custom:video-decoder-ogg-theora: a1e56fd34408186e4bbccfd4996cb3dc -> 
  custom:container-muxer-webm: aa71ff27fc2769a1b78a27578f13a17b -> 
  custom:container-demuxer-webm: 4f35f7cbe854078d1ac9338744f61a02 -> 
  custom:container-demuxer-ogg: 62fdf1f143b41e24485cea50d1cbac27 -> 
  custom:video-encoder-webm-vp8: eb34c28f22e8b96e1ab97ce403110664 -> 
  custom:framework-osx-AVFoundation: e770b220cccbd017edd2c1fefb359320 -> 
  custom:video-decoder-webm-vp8: 9c59270c3fd7afecdb556c50c9e8de78 -> 
  custom:graphics/normal-map-encoding: 01000000000000000000000000000000 -> 02000000000000000000000000000000
  custom:audio-decoder-ogg-vorbis: bf7c407c2cedff20999df2af8eb42d56 -> 
  custom:audio-encoder-webm-vorbis: bf7c407c2cedff20999df2af8eb42d56 -> 
========================================================================
Received Prepare
Registering precompiled user dll's ...
Registered in 0.001434 seconds.
Begin MonoManager ReloadAssembly
Native extension for OSXStandalone target not found
Refreshing native plugins compatible for Editor in 0.51 ms, found 3 plugins.
Preloading 0 native plugins for Editor in 0.00 ms.
2022-10-14 12:16:40.240 Unity[39410:508699] NSEventModifierFlagFunction specified to -setKeyEquivalentModifierMask: for item <NSMenuItem: 0x600003c32ae0 Font Asset, ke='Command-F12'>, but is only supported for system-provided menu items; will not be used
Mono: successfully reloaded assembly
- Completed reload, in  2.326 seconds
Domain Reload Profiling:
	ReloadAssembly (2326ms)
		BeginReloadAssembly (208ms)
			ExecutionOrderSort (0ms)
			DisableScriptedObjects (39ms)
			BackupInstance (0ms)
			ReleaseScriptingObjects (0ms)
			CreateAndSetChildDomain (66ms)
		EndReloadAssembly (2024ms)
			LoadAssemblies (206ms)
			RebuildTransferFunctionScriptingTraits (0ms)
			SetupTypeCache (354ms)
			ReleaseScriptCaches (1ms)
			RebuildScriptCaches (56ms)
			SetupLoadedEditorAssemblies (1118ms)
				LogAssemblyErrors (0ms)
				InitializePlatformSupportModulesInManaged (15ms)
				SetLoadedEditorAssemblies (2ms)
				RefreshPlugins (1ms)
				BeforeProcessingInitializeOnLoad (268ms)
				ProcessInitializeOnLoadAttributes (791ms)
				ProcessInitializeOnLoadMethodAttributes (40ms)
				AfterProcessingInitializeOnLoad (1ms)
				EditorAssembliesLoaded (0ms)
			ExecutionOrderSort2 (0ms)
			AwakeInstancesAfterBackupRestoration (41ms)
Platform modules already initialized, skipping
Switching build target platform(2) subTarget(0) extendedPlatform(0) -> platform(13) subTarget(537395200) extendedPlatform(0)
Refreshing native plugins compatible for Editor in 0.41 ms, found 3 plugins.
Preloading 0 native plugins for Editor in 0.00 ms.
Unloading 2300 Unused Serialized files (Serialized files now loaded: 0)
System memory in use before: 210.9 MB.
System memory in use after: 211.2 MB.

Unloading 30 unused Assets to reduce memory usage. Loaded Objects now: 2791.
Total: 2.135500 ms (FindLiveObjects: 0.121250 ms CreateObjectMapping: 0.044292 ms MarkObjects: 1.954041 ms  DeleteObjects: 0.015041 ms)

AssetImportParameters requested are different than current active one (requested -> active):
  custom:video-decoder-ogg-theora: a1e56fd34408186e4bbccfd4996cb3dc -> 
  custom:container-muxer-webm: aa71ff27fc2769a1b78a27578f13a17b -> 
  custom:container-demuxer-webm: 4f35f7cbe854078d1ac9338744f61a02 -> 
  custom:container-demuxer-ogg: 62fdf1f143b41e24485cea50d1cbac27 -> 
  custom:video-encoder-webm-vp8: eb34c28f22e8b96e1ab97ce403110664 -> 
  custom:framework-osx-AVFoundation: e770b220cccbd017edd2c1fefb359320 -> 
  custom:video-decoder-webm-vp8: 9c59270c3fd7afecdb556c50c9e8de78 -> 
  custom:graphics/normal-map-encoding: 01000000000000000000000000000000 -> 02000000000000000000000000000000
  custom:audio-decoder-ogg-vorbis: bf7c407c2cedff20999df2af8eb42d56 -> 
  custom:audio-encoder-webm-vorbis: bf7c407c2cedff20999df2af8eb42d56 -> 
========================================================================
Received Prepare
Registering precompiled user dll's ...
Registered in 0.004853 seconds.
Begin MonoManager ReloadAssembly
Native extension for OSXStandalone target not found
Refreshing native plugins compatible for Editor in 0.50 ms, found 3 plugins.
Preloading 0 native plugins for Editor in 0.00 ms.
2022-10-14 12:26:11.719 Unity[39410:508699] NSEventModifierFlagFunction specified to -setKeyEquivalentModifierMask: for item <NSMenuItem: 0x600003c0f4f0 Font Asset, ke='Command-F12'>, but is only supported for system-provided menu items; will not be used
Mono: successfully reloaded assembly
- Completed reload, in  2.143 seconds
Domain Reload Profiling:
	ReloadAssembly (2144ms)
		BeginReloadAssembly (195ms)
			ExecutionOrderSort (0ms)
			DisableScriptedObjects (37ms)
			BackupInstance (0ms)
			ReleaseScriptingObjects (0ms)
			CreateAndSetChildDomain (59ms)
		EndReloadAssembly (1861ms)
			LoadAssemblies (187ms)
			RebuildTransferFunctionScriptingTraits (0ms)
			SetupTypeCache (325ms)
			ReleaseScriptCaches (1ms)
			RebuildScriptCaches (48ms)
			SetupLoadedEditorAssemblies (1026ms)
				LogAssemblyErrors (0ms)
				InitializePlatformSupportModulesInManaged (13ms)
				SetLoadedEditorAssemblies (2ms)
				RefreshPlugins (1ms)
				BeforeProcessingInitializeOnLoad (242ms)
				ProcessInitializeOnLoadAttributes (730ms)
				ProcessInitializeOnLoadMethodAttributes (37ms)
				AfterProcessingInitializeOnLoad (1ms)
				EditorAssembliesLoaded (0ms)
			ExecutionOrderSort2 (0ms)
			AwakeInstancesAfterBackupRestoration (38ms)
Platform modules already initialized, skipping
Switching build target platform(2) subTarget(0) extendedPlatform(0) -> platform(13) subTarget(537395200) extendedPlatform(0)
Refreshing native plugins compatible for Editor in 0.44 ms, found 3 plugins.
Preloading 0 native plugins for Editor in 0.00 ms.
Unloading 2300 Unused Serialized files (Serialized files now loaded: 0)
System memory in use before: 211.0 MB.
System memory in use after: 211.3 MB.

Unloading 30 unused Assets to reduce memory usage. Loaded Objects now: 2793.
Total: 2.156667 ms (FindLiveObjects: 0.121167 ms CreateObjectMapping: 0.043333 ms MarkObjects: 1.973375 ms  DeleteObjects: 0.018250 ms)

AssetImportParameters requested are different than current active one (requested -> active):
  custom:video-decoder-ogg-theora: a1e56fd34408186e4bbccfd4996cb3dc -> 
  custom:container-muxer-webm: aa71ff27fc2769a1b78a27578f13a17b -> 
  custom:container-demuxer-webm: 4f35f7cbe854078d1ac9338744f61a02 -> 
  custom:container-demuxer-ogg: 62fdf1f143b41e24485cea50d1cbac27 -> 
  custom:video-encoder-webm-vp8: eb34c28f22e8b96e1ab97ce403110664 -> 
  custom:framework-osx-AVFoundation: e770b220cccbd017edd2c1fefb359320 -> 
  custom:video-decoder-webm-vp8: 9c59270c3fd7afecdb556c50c9e8de78 -> 
  custom:graphics/normal-map-encoding: 01000000000000000000000000000000 -> 02000000000000000000000000000000
  custom:audio-decoder-ogg-vorbis: bf7c407c2cedff20999df2af8eb42d56 -> 
  custom:audio-encoder-webm-vorbis: bf7c407c2cedff20999df2af8eb42d56 -> 
========================================================================
Received Prepare
Registering precompiled user dll's ...
Registered in 0.003268 seconds.
Begin MonoManager ReloadAssembly
Native extension for OSXStandalone target not found
Refreshing native plugins compatible for Editor in 0.53 ms, found 3 plugins.
Preloading 0 native plugins for Editor in 0.00 ms.
2022-10-14 12:34:25.794 Unity[39410:508699] NSEventModifierFlagFunction specified to -setKeyEquivalentModifierMask: for item <NSMenuItem: 0x600003c1f410 Font Asset, ke='Command-F12'>, but is only supported for system-provided menu items; will not be used
Mono: successfully reloaded assembly
- Completed reload, in  2.292 seconds
Domain Reload Profiling:
	ReloadAssembly (2293ms)
		BeginReloadAssembly (202ms)
			ExecutionOrderSort (0ms)
			DisableScriptedObjects (38ms)
			BackupInstance (0ms)
			ReleaseScriptingObjects (0ms)
			CreateAndSetChildDomain (65ms)
		EndReloadAssembly (1997ms)
			LoadAssemblies (179ms)
			RebuildTransferFunctionScriptingTraits (0ms)
			SetupTypeCache (352ms)
			ReleaseScriptCaches (1ms)
			RebuildScriptCaches (54ms)
			SetupLoadedEditorAssemblies (1127ms)
				LogAssemblyErrors (0ms)
				InitializePlatformSupportModulesInManaged (13ms)
				SetLoadedEditorAssemblies (1ms)
				RefreshPlugins (1ms)
				BeforeProcessingInitializeOnLoad (260ms)
				ProcessInitializeOnLoadAttributes (809ms)
				ProcessInitializeOnLoadMethodAttributes (41ms)
				AfterProcessingInitializeOnLoad (1ms)
				EditorAssembliesLoaded (0ms)
			ExecutionOrderSort2 (0ms)
			AwakeInstancesAfterBackupRestoration (38ms)
Platform modules already initialized, skipping
Switching build target platform(2) subTarget(0) extendedPlatform(0) -> platform(13) subTarget(537395200) extendedPlatform(0)
Refreshing native plugins compatible for Editor in 0.42 ms, found 3 plugins.
Preloading 0 native plugins for Editor in 0.00 ms.
Unloading 2300 Unused Serialized files (Serialized files now loaded: 0)
System memory in use before: 211.3 MB.
System memory in use after: 211.5 MB.

Unloading 30 unused Assets to reduce memory usage. Loaded Objects now: 2795.
Total: 2.203042 ms (FindLiveObjects: 0.118959 ms CreateObjectMapping: 0.046250 ms MarkObjects: 2.022042 ms  DeleteObjects: 0.015000 ms)

AssetImportParameters requested are different than current active one (requested -> active):
  custom:video-decoder-ogg-theora: a1e56fd34408186e4bbccfd4996cb3dc -> 
  custom:container-muxer-webm: aa71ff27fc2769a1b78a27578f13a17b -> 
  custom:container-demuxer-webm: 4f35f7cbe854078d1ac9338744f61a02 -> 
  custom:container-demuxer-ogg: 62fdf1f143b41e24485cea50d1cbac27 -> 
  custom:video-encoder-webm-vp8: eb34c28f22e8b96e1ab97ce403110664 -> 
  custom:framework-osx-AVFoundation: e770b220cccbd017edd2c1fefb359320 -> 
  custom:video-decoder-webm-vp8: 9c59270c3fd7afecdb556c50c9e8de78 -> 
  custom:graphics/normal-map-encoding: 01000000000000000000000000000000 -> 02000000000000000000000000000000
  custom:audio-decoder-ogg-vorbis: bf7c407c2cedff20999df2af8eb42d56 -> 
  custom:audio-encoder-webm-vorbis: bf7c407c2cedff20999df2af8eb42d56 -> 
========================================================================
Received Prepare
Registering precompiled user dll's ...
Registered in 0.002666 seconds.
Begin MonoManager ReloadAssembly
Native extension for OSXStandalone target not found
Refreshing native plugins compatible for Editor in 0.52 ms, found 3 plugins.
Preloading 0 native plugins for Editor in 0.00 ms.
2022-10-14 12:35:14.288 Unity[39410:508699] NSEventModifierFlagFunction specified to -setKeyEquivalentModifierMask: for item <NSMenuItem: 0x600003c1d260 Font Asset, ke='Command-F12'>, but is only supported for system-provided menu items; will not be used
Mono: successfully reloaded assembly
- Completed reload, in  2.262 seconds
Domain Reload Profiling:
	ReloadAssembly (2263ms)
		BeginReloadAssembly (204ms)
			ExecutionOrderSort (0ms)
			DisableScriptedObjects (39ms)
			BackupInstance (0ms)
			ReleaseScriptingObjects (0ms)
			CreateAndSetChildDomain (62ms)
		EndReloadAssembly (1967ms)
			LoadAssemblies (177ms)
			RebuildTransferFunctionScriptingTraits (0ms)
			SetupTypeCache (344ms)
			ReleaseScriptCaches (1ms)
			RebuildScriptCaches (54ms)
			SetupLoadedEditorAssemblies (1101ms)
				LogAssemblyErrors (0ms)
				InitializePlatformSupportModulesInManaged (14ms)
				SetLoadedEditorAssemblies (2ms)
				RefreshPlugins (1ms)
				BeforeProcessingInitializeOnLoad (264ms)
				ProcessInitializeOnLoadAttributes (777ms)
				ProcessInitializeOnLoadMethodAttributes (42ms)
				AfterProcessingInitializeOnLoad (1ms)
				EditorAssembliesLoaded (0ms)
			ExecutionOrderSort2 (0ms)
			AwakeInstancesAfterBackupRestoration (40ms)
Platform modules already initialized, skipping
Switching build target platform(2) subTarget(0) extendedPlatform(0) -> platform(13) subTarget(537395200) extendedPlatform(0)
Refreshing native plugins compatible for Editor in 0.48 ms, found 3 plugins.
Preloading 0 native plugins for Editor in 0.00 ms.
Unloading 2300 Unused Serialized files (Serialized files now loaded: 0)
System memory in use before: 211.5 MB.
System memory in use after: 211.7 MB.

Unloading 30 unused Assets to reduce memory usage. Loaded Objects now: 2797.
Total: 2.279458 ms (FindLiveObjects: 0.135167 ms CreateObjectMapping: 0.048792 ms MarkObjects: 2.077042 ms  DeleteObjects: 0.017333 ms)

AssetImportParameters requested are different than current active one (requested -> active):
  custom:video-decoder-ogg-theora: a1e56fd34408186e4bbccfd4996cb3dc -> 
  custom:container-muxer-webm: aa71ff27fc2769a1b78a27578f13a17b -> 
  custom:container-demuxer-webm: 4f35f7cbe854078d1ac9338744f61a02 -> 
  custom:container-demuxer-ogg: 62fdf1f143b41e24485cea50d1cbac27 -> 
  custom:video-encoder-webm-vp8: eb34c28f22e8b96e1ab97ce403110664 -> 
  custom:framework-osx-AVFoundation: e770b220cccbd017edd2c1fefb359320 -> 
  custom:video-decoder-webm-vp8: 9c59270c3fd7afecdb556c50c9e8de78 -> 
  custom:graphics/normal-map-encoding: 01000000000000000000000000000000 -> 02000000000000000000000000000000
  custom:audio-decoder-ogg-vorbis: bf7c407c2cedff20999df2af8eb42d56 -> 
  custom:audio-encoder-webm-vorbis: bf7c407c2cedff20999df2af8eb42d56 -> 
========================================================================
Received Import Request.
  Time since last request: 1191.197096 seconds.
  path: Assets/Resources/Prefabs/Slot.prefab
  artifactKey: Guid(06a12056aef3f458ea896a90f397357c) Importer(815301076,1909f56bfc062723c751e8b465ee728b)
Start importing Assets/Resources/Prefabs/Slot.prefab using Guid(06a12056aef3f458ea896a90f397357c) Importer(815301076,1909f56bfc062723c751e8b465ee728b) Diagnostics callstack to track who triggered the sub-import:
 #5 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #7 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #8 _dispatch_client_callout
 #9 _dispatch_async_and_wait_invoke
 #10 _dispatch_client_callout
 #11 _dispatch_main_queue_callback_4CF
 #12 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #13 __CFRunLoopRun
 #14 CFRunLoopRunSpecific
 #15 RunCurrentEventLoopInMode
 #16 ReceiveNextEventCommon
 #17 _BlockUntilNextEventMatchingListInModeWithFilter
 #18 _DPSNextEvent
 #19 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #20 -[NSApplication run]
 #21 NSApplicationMain
 #22 EditorMain(int, char const**)
 #23 main
 #24 ???
 #25 ???

Requesting import of Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000), Assets/Resources/Prefabs/Slot.prefab from editor
Resuming Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000) -> 0e506c56a4e51c10762390a6340e8b5c 
Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'unsafeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'safeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'state.state == kUpToDate'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #8 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #9 _dispatch_client_callout
 #10 _dispatch_async_and_wait_invoke
 #11 _dispatch_client_callout
 #12 _dispatch_main_queue_callback_4CF
 #13 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #14 __CFRunLoopRun
 #15 CFRunLoopRunSpecific
 #16 RunCurrentEventLoopInMode
 #17 ReceiveNextEventCommon
 #18 _BlockUntilNextEventMatchingListInModeWithFilter
 #19 _DPSNextEvent
 #20 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #21 -[NSApplication run]
 #22 NSApplicationMain
 #23 EditorMain(int, char const**)
 #24 main
 #25 ???
 #26 ???

Assertion failed on expression: 'state.artifactID == result'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #8 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #9 _dispatch_client_callout
 #10 _dispatch_async_and_wait_invoke
 #11 _dispatch_client_callout
 #12 _dispatch_main_queue_callback_4CF
 #13 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #14 __CFRunLoopRun
 #15 CFRunLoopRunSpecific
 #16 RunCurrentEventLoopInMode
 #17 ReceiveNextEventCommon
 #18 _BlockUntilNextEventMatchingListInModeWithFilter
 #19 _DPSNextEvent
 #20 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #21 -[NSApplication run]
 #22 NSApplicationMain
 #23 EditorMain(int, char const**)
 #24 main
 #25 ???
 #26 ???

Diagnostics callstack to track who triggered the sub-import:
 #5 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #8 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #9 _dispatch_client_callout
 #10 _dispatch_async_and_wait_invoke
 #11 _dispatch_client_callout
 #12 _dispatch_main_queue_callback_4CF
 #13 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #14 __CFRunLoopRun
 #15 CFRunLoopRunSpecific
 #16 RunCurrentEventLoopInMode
 #17 ReceiveNextEventCommon
 #18 _BlockUntilNextEventMatchingListInModeWithFilter
 #19 _DPSNextEvent
 #20 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #21 -[NSApplication run]
 #22 NSApplicationMain
 #23 EditorMain(int, char const**)
 #24 main
 #25 ???
 #26 ???

Requesting import of Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000), Assets/Resources/Prefabs/Slot.prefab from editor
Resuming Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000) -> 0e506c56a4e51c10762390a6340e8b5c 
Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'unsafeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'safeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'state.state == kUpToDate'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #6 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #9 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #10 _dispatch_client_callout
 #11 _dispatch_async_and_wait_invoke
 #12 _dispatch_client_callout
 #13 _dispatch_main_queue_callback_4CF
 #14 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #15 __CFRunLoopRun
 #16 CFRunLoopRunSpecific
 #17 RunCurrentEventLoopInMode
 #18 ReceiveNextEventCommon
 #19 _BlockUntilNextEventMatchingListInModeWithFilter
 #20 _DPSNextEvent
 #21 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #22 -[NSApplication run]
 #23 NSApplicationMain
 #24 EditorMain(int, char const**)
 #25 main
 #26 ???
 #27 ???

Assertion failed on expression: 'state.artifactID == result'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #6 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #9 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #10 _dispatch_client_callout
 #11 _dispatch_async_and_wait_invoke
 #12 _dispatch_client_callout
 #13 _dispatch_main_queue_callback_4CF
 #14 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #15 __CFRunLoopRun
 #16 CFRunLoopRunSpecific
 #17 RunCurrentEventLoopInMode
 #18 ReceiveNextEventCommon
 #19 _BlockUntilNextEventMatchingListInModeWithFilter
 #20 _DPSNextEvent
 #21 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #22 -[NSApplication run]
 #23 NSApplicationMain
 #24 EditorMain(int, char const**)
 #25 main
 #26 ???
 #27 ???

 -> (artifact id: '00000000000000000000000000000000') in 0.104842 seconds  code(4) message(Build asset version error: assets/resources/prefabs/slot.prefab in SourceAssetDB has modification time of '2022-10-14T08:02:03Z' while content on disk has modification time of '2022-10-14T11:14:46Z')
  ERROR: Build asset version error: assets/resources/prefabs/slot.prefab in SourceAssetDB has modification time of '2022-10-14T08:02:03Z' while content on disk has modification time of '2022-10-14T11:14:46Z'
  Import took 0.107600 seconds .

========================================================================
Received Prepare
Registering precompiled user dll's ...
Registered in 0.004659 seconds.
Begin MonoManager ReloadAssembly
Native extension for OSXStandalone target not found
Refreshing native plugins compatible for Editor in 0.62 ms, found 3 plugins.
Preloading 0 native plugins for Editor in 0.00 ms.
2022-10-14 12:36:28.208 Unity[39410:508699] NSEventModifierFlagFunction specified to -setKeyEquivalentModifierMask: for item <NSMenuItem: 0x600003c0ce70 Font Asset, ke='Command-F12'>, but is only supported for system-provided menu items; will not be used
Mono: successfully reloaded assembly
- Completed reload, in  2.194 seconds
Domain Reload Profiling:
	ReloadAssembly (2195ms)
		BeginReloadAssembly (190ms)
			ExecutionOrderSort (0ms)
			DisableScriptedObjects (35ms)
			BackupInstance (0ms)
			ReleaseScriptingObjects (0ms)
			CreateAndSetChildDomain (59ms)
		EndReloadAssembly (1916ms)
			LoadAssemblies (186ms)
			RebuildTransferFunctionScriptingTraits (0ms)
			SetupTypeCache (332ms)
			ReleaseScriptCaches (1ms)
			RebuildScriptCaches (49ms)
			SetupLoadedEditorAssemblies (1043ms)
				LogAssemblyErrors (0ms)
				InitializePlatformSupportModulesInManaged (15ms)
				SetLoadedEditorAssemblies (2ms)
				RefreshPlugins (1ms)
				BeforeProcessingInitializeOnLoad (252ms)
				ProcessInitializeOnLoadAttributes (735ms)
				ProcessInitializeOnLoadMethodAttributes (38ms)
				AfterProcessingInitializeOnLoad (1ms)
				EditorAssembliesLoaded (0ms)
			ExecutionOrderSort2 (0ms)
			AwakeInstancesAfterBackupRestoration (36ms)
Platform modules already initialized, skipping
Switching build target platform(2) subTarget(0) extendedPlatform(0) -> platform(13) subTarget(537395200) extendedPlatform(0)
Refreshing native plugins compatible for Editor in 0.41 ms, found 3 plugins.
Preloading 0 native plugins for Editor in 0.00 ms.
Unloading 2300 Unused Serialized files (Serialized files now loaded: 0)
System memory in use before: 212.0 MB.
System memory in use after: 212.2 MB.

Unloading 30 unused Assets to reduce memory usage. Loaded Objects now: 2799.
Total: 2.166750 ms (FindLiveObjects: 0.120667 ms CreateObjectMapping: 0.044583 ms MarkObjects: 1.983500 ms  DeleteObjects: 0.017291 ms)

AssetImportParameters requested are different than current active one (requested -> active):
  custom:video-decoder-ogg-theora: a1e56fd34408186e4bbccfd4996cb3dc -> 
  custom:container-muxer-webm: aa71ff27fc2769a1b78a27578f13a17b -> 
  custom:container-demuxer-webm: 4f35f7cbe854078d1ac9338744f61a02 -> 
  custom:container-demuxer-ogg: 62fdf1f143b41e24485cea50d1cbac27 -> 
  custom:video-encoder-webm-vp8: eb34c28f22e8b96e1ab97ce403110664 -> 
  custom:framework-osx-AVFoundation: e770b220cccbd017edd2c1fefb359320 -> 
  custom:video-decoder-webm-vp8: 9c59270c3fd7afecdb556c50c9e8de78 -> 
  custom:graphics/normal-map-encoding: 01000000000000000000000000000000 -> 02000000000000000000000000000000
  custom:audio-decoder-ogg-vorbis: bf7c407c2cedff20999df2af8eb42d56 -> 
  custom:audio-encoder-webm-vorbis: bf7c407c2cedff20999df2af8eb42d56 -> 
========================================================================
Received Import Request.
  Time since last request: 41.017424 seconds.
  path: Assets/Resources/Prefabs/Slot.prefab
  artifactKey: Guid(06a12056aef3f458ea896a90f397357c) Importer(815301076,1909f56bfc062723c751e8b465ee728b)
Start importing Assets/Resources/Prefabs/Slot.prefab using Guid(06a12056aef3f458ea896a90f397357c) Importer(815301076,1909f56bfc062723c751e8b465ee728b) Diagnostics callstack to track who triggered the sub-import:
 #5 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #7 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #8 _dispatch_client_callout
 #9 _dispatch_async_and_wait_invoke
 #10 _dispatch_client_callout
 #11 _dispatch_main_queue_callback_4CF
 #12 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #13 __CFRunLoopRun
 #14 CFRunLoopRunSpecific
 #15 RunCurrentEventLoopInMode
 #16 ReceiveNextEventCommon
 #17 _BlockUntilNextEventMatchingListInModeWithFilter
 #18 _DPSNextEvent
 #19 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #20 -[NSApplication run]
 #21 NSApplicationMain
 #22 EditorMain(int, char const**)
 #23 main
 #24 ???
 #25 ???

Requesting import of Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000), Assets/Resources/Prefabs/Slot.prefab from editor
Resuming Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000) -> 0e506c56a4e51c10762390a6340e8b5c 
Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'unsafeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'safeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'state.state == kUpToDate'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #8 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #9 _dispatch_client_callout
 #10 _dispatch_async_and_wait_invoke
 #11 _dispatch_client_callout
 #12 _dispatch_main_queue_callback_4CF
 #13 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #14 __CFRunLoopRun
 #15 CFRunLoopRunSpecific
 #16 RunCurrentEventLoopInMode
 #17 ReceiveNextEventCommon
 #18 _BlockUntilNextEventMatchingListInModeWithFilter
 #19 _DPSNextEvent
 #20 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #21 -[NSApplication run]
 #22 NSApplicationMain
 #23 EditorMain(int, char const**)
 #24 main
 #25 ???
 #26 ???

Assertion failed on expression: 'state.artifactID == result'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #8 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #9 _dispatch_client_callout
 #10 _dispatch_async_and_wait_invoke
 #11 _dispatch_client_callout
 #12 _dispatch_main_queue_callback_4CF
 #13 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #14 __CFRunLoopRun
 #15 CFRunLoopRunSpecific
 #16 RunCurrentEventLoopInMode
 #17 ReceiveNextEventCommon
 #18 _BlockUntilNextEventMatchingListInModeWithFilter
 #19 _DPSNextEvent
 #20 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #21 -[NSApplication run]
 #22 NSApplicationMain
 #23 EditorMain(int, char const**)
 #24 main
 #25 ???
 #26 ???

Diagnostics callstack to track who triggered the sub-import:
 #5 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #8 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #9 _dispatch_client_callout
 #10 _dispatch_async_and_wait_invoke
 #11 _dispatch_client_callout
 #12 _dispatch_main_queue_callback_4CF
 #13 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #14 __CFRunLoopRun
 #15 CFRunLoopRunSpecific
 #16 RunCurrentEventLoopInMode
 #17 ReceiveNextEventCommon
 #18 _BlockUntilNextEventMatchingListInModeWithFilter
 #19 _DPSNextEvent
 #20 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #21 -[NSApplication run]
 #22 NSApplicationMain
 #23 EditorMain(int, char const**)
 #24 main
 #25 ???
 #26 ???

Requesting import of Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000), Assets/Resources/Prefabs/Slot.prefab from editor
Resuming Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000) -> 0e506c56a4e51c10762390a6340e8b5c 
Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'unsafeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'safeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'state.state == kUpToDate'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #6 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #9 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #10 _dispatch_client_callout
 #11 _dispatch_async_and_wait_invoke
 #12 _dispatch_client_callout
 #13 _dispatch_main_queue_callback_4CF
 #14 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #15 __CFRunLoopRun
 #16 CFRunLoopRunSpecific
 #17 RunCurrentEventLoopInMode
 #18 ReceiveNextEventCommon
 #19 _BlockUntilNextEventMatchingListInModeWithFilter
 #20 _DPSNextEvent
 #21 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #22 -[NSApplication run]
 #23 NSApplicationMain
 #24 EditorMain(int, char const**)
 #25 main
 #26 ???
 #27 ???

Assertion failed on expression: 'state.artifactID == result'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #6 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #9 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #10 _dispatch_client_callout
 #11 _dispatch_async_and_wait_invoke
 #12 _dispatch_client_callout
 #13 _dispatch_main_queue_callback_4CF
 #14 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #15 __CFRunLoopRun
 #16 CFRunLoopRunSpecific
 #17 RunCurrentEventLoopInMode
 #18 ReceiveNextEventCommon
 #19 _BlockUntilNextEventMatchingListInModeWithFilter
 #20 _DPSNextEvent
 #21 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #22 -[NSApplication run]
 #23 NSApplicationMain
 #24 EditorMain(int, char const**)
 #25 main
 #26 ???
 #27 ???

 -> (artifact id: '00000000000000000000000000000000') in 0.094430 seconds  code(4) message(Build asset version error: assets/resources/prefabs/slot.prefab in SourceAssetDB has modification time of '2022-10-14T08:02:03Z' while content on disk has modification time of '2022-10-14T11:14:46Z')
  ERROR: Build asset version error: assets/resources/prefabs/slot.prefab in SourceAssetDB has modification time of '2022-10-14T08:02:03Z' while content on disk has modification time of '2022-10-14T11:14:46Z'
  Import took 0.096800 seconds .

========================================================================
Received Import Request.
  Time since last request: 71.873090 seconds.
  path: Assets/Resources/Prefabs/Slot.prefab
  artifactKey: Guid(06a12056aef3f458ea896a90f397357c) Importer(815301076,1909f56bfc062723c751e8b465ee728b)
Start importing Assets/Resources/Prefabs/Slot.prefab using Guid(06a12056aef3f458ea896a90f397357c) Importer(815301076,1909f56bfc062723c751e8b465ee728b) Diagnostics callstack to track who triggered the sub-import:
 #5 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #7 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #8 _dispatch_client_callout
 #9 _dispatch_async_and_wait_invoke
 #10 _dispatch_client_callout
 #11 _dispatch_main_queue_callback_4CF
 #12 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #13 __CFRunLoopRun
 #14 CFRunLoopRunSpecific
 #15 RunCurrentEventLoopInMode
 #16 ReceiveNextEventCommon
 #17 _BlockUntilNextEventMatchingListInModeWithFilter
 #18 _DPSNextEvent
 #19 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #20 -[NSApplication run]
 #21 NSApplicationMain
 #22 EditorMain(int, char const**)
 #23 main
 #24 ???
 #25 ???

Requesting import of Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000), Assets/Resources/Prefabs/Slot.prefab from editor
Resuming Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000) -> 0e506c56a4e51c10762390a6340e8b5c 
Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'unsafeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'safeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'state.state == kUpToDate'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #8 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #9 _dispatch_client_callout
 #10 _dispatch_async_and_wait_invoke
 #11 _dispatch_client_callout
 #12 _dispatch_main_queue_callback_4CF
 #13 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #14 __CFRunLoopRun
 #15 CFRunLoopRunSpecific
 #16 RunCurrentEventLoopInMode
 #17 ReceiveNextEventCommon
 #18 _BlockUntilNextEventMatchingListInModeWithFilter
 #19 _DPSNextEvent
 #20 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #21 -[NSApplication run]
 #22 NSApplicationMain
 #23 EditorMain(int, char const**)
 #24 main
 #25 ???
 #26 ???

Assertion failed on expression: 'state.artifactID == result'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #8 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #9 _dispatch_client_callout
 #10 _dispatch_async_and_wait_invoke
 #11 _dispatch_client_callout
 #12 _dispatch_main_queue_callback_4CF
 #13 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #14 __CFRunLoopRun
 #15 CFRunLoopRunSpecific
 #16 RunCurrentEventLoopInMode
 #17 ReceiveNextEventCommon
 #18 _BlockUntilNextEventMatchingListInModeWithFilter
 #19 _DPSNextEvent
 #20 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #21 -[NSApplication run]
 #22 NSApplicationMain
 #23 EditorMain(int, char const**)
 #24 main
 #25 ???
 #26 ???

Diagnostics callstack to track who triggered the sub-import:
 #5 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #8 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #9 _dispatch_client_callout
 #10 _dispatch_async_and_wait_invoke
 #11 _dispatch_client_callout
 #12 _dispatch_main_queue_callback_4CF
 #13 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #14 __CFRunLoopRun
 #15 CFRunLoopRunSpecific
 #16 RunCurrentEventLoopInMode
 #17 ReceiveNextEventCommon
 #18 _BlockUntilNextEventMatchingListInModeWithFilter
 #19 _DPSNextEvent
 #20 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #21 -[NSApplication run]
 #22 NSApplicationMain
 #23 EditorMain(int, char const**)
 #24 main
 #25 ???
 #26 ???

Requesting import of Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000), Assets/Resources/Prefabs/Slot.prefab from editor
Resuming Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000) -> 0e506c56a4e51c10762390a6340e8b5c 
Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'unsafeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'safeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'state.state == kUpToDate'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #6 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #9 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #10 _dispatch_client_callout
 #11 _dispatch_async_and_wait_invoke
 #12 _dispatch_client_callout
 #13 _dispatch_main_queue_callback_4CF
 #14 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #15 __CFRunLoopRun
 #16 CFRunLoopRunSpecific
 #17 RunCurrentEventLoopInMode
 #18 ReceiveNextEventCommon
 #19 _BlockUntilNextEventMatchingListInModeWithFilter
 #20 _DPSNextEvent
 #21 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #22 -[NSApplication run]
 #23 NSApplicationMain
 #24 EditorMain(int, char const**)
 #25 main
 #26 ???
 #27 ???

Assertion failed on expression: 'state.artifactID == result'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #6 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #9 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #10 _dispatch_client_callout
 #11 _dispatch_async_and_wait_invoke
 #12 _dispatch_client_callout
 #13 _dispatch_main_queue_callback_4CF
 #14 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #15 __CFRunLoopRun
 #16 CFRunLoopRunSpecific
 #17 RunCurrentEventLoopInMode
 #18 ReceiveNextEventCommon
 #19 _BlockUntilNextEventMatchingListInModeWithFilter
 #20 _DPSNextEvent
 #21 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #22 -[NSApplication run]
 #23 NSApplicationMain
 #24 EditorMain(int, char const**)
 #25 main
 #26 ???
 #27 ???

 -> (artifact id: '00000000000000000000000000000000') in 0.095963 seconds  code(4) message(Build asset version error: assets/resources/prefabs/slot.prefab in SourceAssetDB has modification time of '2022-10-14T08:02:03Z' while content on disk has modification time of '2022-10-14T11:14:46Z')
  ERROR: Build asset version error: assets/resources/prefabs/slot.prefab in SourceAssetDB has modification time of '2022-10-14T08:02:03Z' while content on disk has modification time of '2022-10-14T11:14:46Z'
  Import took 0.098706 seconds .

========================================================================
Received Import Request.
  Time since last request: 5.430823 seconds.
  path: Assets/Resources/Prefabs/Slot.prefab
  artifactKey: Guid(06a12056aef3f458ea896a90f397357c) Importer(815301076,1909f56bfc062723c751e8b465ee728b)
Start importing Assets/Resources/Prefabs/Slot.prefab using Guid(06a12056aef3f458ea896a90f397357c) Importer(815301076,1909f56bfc062723c751e8b465ee728b) Diagnostics callstack to track who triggered the sub-import:
 #5 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #7 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #8 _dispatch_client_callout
 #9 _dispatch_async_and_wait_invoke
 #10 _dispatch_client_callout
 #11 _dispatch_main_queue_callback_4CF
 #12 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #13 __CFRunLoopRun
 #14 CFRunLoopRunSpecific
 #15 RunCurrentEventLoopInMode
 #16 ReceiveNextEventCommon
 #17 _BlockUntilNextEventMatchingListInModeWithFilter
 #18 _DPSNextEvent
 #19 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #20 -[NSApplication run]
 #21 NSApplicationMain
 #22 EditorMain(int, char const**)
 #23 main
 #24 ???
 #25 ???

Requesting import of Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000), Assets/Resources/Prefabs/Slot.prefab from editor
Resuming Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000) -> 0e506c56a4e51c10762390a6340e8b5c 
Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'unsafeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'safeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'state.state == kUpToDate'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #8 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #9 _dispatch_client_callout
 #10 _dispatch_async_and_wait_invoke
 #11 _dispatch_client_callout
 #12 _dispatch_main_queue_callback_4CF
 #13 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #14 __CFRunLoopRun
 #15 CFRunLoopRunSpecific
 #16 RunCurrentEventLoopInMode
 #17 ReceiveNextEventCommon
 #18 _BlockUntilNextEventMatchingListInModeWithFilter
 #19 _DPSNextEvent
 #20 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #21 -[NSApplication run]
 #22 NSApplicationMain
 #23 EditorMain(int, char const**)
 #24 main
 #25 ???
 #26 ???

Assertion failed on expression: 'state.artifactID == result'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #8 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #9 _dispatch_client_callout
 #10 _dispatch_async_and_wait_invoke
 #11 _dispatch_client_callout
 #12 _dispatch_main_queue_callback_4CF
 #13 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #14 __CFRunLoopRun
 #15 CFRunLoopRunSpecific
 #16 RunCurrentEventLoopInMode
 #17 ReceiveNextEventCommon
 #18 _BlockUntilNextEventMatchingListInModeWithFilter
 #19 _DPSNextEvent
 #20 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #21 -[NSApplication run]
 #22 NSApplicationMain
 #23 EditorMain(int, char const**)
 #24 main
 #25 ???
 #26 ???

Diagnostics callstack to track who triggered the sub-import:
 #5 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #8 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #9 _dispatch_client_callout
 #10 _dispatch_async_and_wait_invoke
 #11 _dispatch_client_callout
 #12 _dispatch_main_queue_callback_4CF
 #13 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #14 __CFRunLoopRun
 #15 CFRunLoopRunSpecific
 #16 RunCurrentEventLoopInMode
 #17 ReceiveNextEventCommon
 #18 _BlockUntilNextEventMatchingListInModeWithFilter
 #19 _DPSNextEvent
 #20 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #21 -[NSApplication run]
 #22 NSApplicationMain
 #23 EditorMain(int, char const**)
 #24 main
 #25 ???
 #26 ???

Requesting import of Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000), Assets/Resources/Prefabs/Slot.prefab from editor
Resuming Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000) -> 0e506c56a4e51c10762390a6340e8b5c 
Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'unsafeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'safeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'state.state == kUpToDate'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #6 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #9 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #10 _dispatch_client_callout
 #11 _dispatch_async_and_wait_invoke
 #12 _dispatch_client_callout
 #13 _dispatch_main_queue_callback_4CF
 #14 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #15 __CFRunLoopRun
 #16 CFRunLoopRunSpecific
 #17 RunCurrentEventLoopInMode
 #18 ReceiveNextEventCommon
 #19 _BlockUntilNextEventMatchingListInModeWithFilter
 #20 _DPSNextEvent
 #21 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #22 -[NSApplication run]
 #23 NSApplicationMain
 #24 EditorMain(int, char const**)
 #25 main
 #26 ???
 #27 ???

Assertion failed on expression: 'state.artifactID == result'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #6 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #9 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #10 _dispatch_client_callout
 #11 _dispatch_async_and_wait_invoke
 #12 _dispatch_client_callout
 #13 _dispatch_main_queue_callback_4CF
 #14 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #15 __CFRunLoopRun
 #16 CFRunLoopRunSpecific
 #17 RunCurrentEventLoopInMode
 #18 ReceiveNextEventCommon
 #19 _BlockUntilNextEventMatchingListInModeWithFilter
 #20 _DPSNextEvent
 #21 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #22 -[NSApplication run]
 #23 NSApplicationMain
 #24 EditorMain(int, char const**)
 #25 main
 #26 ???
 #27 ???

 -> (artifact id: '00000000000000000000000000000000') in 0.098078 seconds  code(4) message(Build asset version error: assets/resources/prefabs/slot.prefab in SourceAssetDB has modification time of '2022-10-14T08:02:03Z' while content on disk has modification time of '2022-10-14T11:14:46Z')
  ERROR: Build asset version error: assets/resources/prefabs/slot.prefab in SourceAssetDB has modification time of '2022-10-14T08:02:03Z' while content on disk has modification time of '2022-10-14T11:14:46Z'
  Import took 0.100839 seconds .

========================================================================
Received Prepare
Registering precompiled user dll's ...
Registered in 0.005104 seconds.
Begin MonoManager ReloadAssembly
Native extension for OSXStandalone target not found
Refreshing native plugins compatible for Editor in 0.50 ms, found 3 plugins.
Preloading 0 native plugins for Editor in 0.00 ms.
2022-10-14 12:44:18.807 Unity[39410:508699] NSEventModifierFlagFunction specified to -setKeyEquivalentModifierMask: for item <NSMenuItem: 0x600003f70540 Font Asset, ke='Command-F12'>, but is only supported for system-provided menu items; will not be used
Mono: successfully reloaded assembly
- Completed reload, in  2.201 seconds
Domain Reload Profiling:
	ReloadAssembly (2202ms)
		BeginReloadAssembly (205ms)
			ExecutionOrderSort (0ms)
			DisableScriptedObjects (39ms)
			BackupInstance (0ms)
			ReleaseScriptingObjects (0ms)
			CreateAndSetChildDomain (64ms)
		EndReloadAssembly (1906ms)
			LoadAssemblies (202ms)
			RebuildTransferFunctionScriptingTraits (0ms)
			SetupTypeCache (327ms)
			ReleaseScriptCaches (1ms)
			RebuildScriptCaches (48ms)
			SetupLoadedEditorAssemblies (1044ms)
				LogAssemblyErrors (0ms)
				InitializePlatformSupportModulesInManaged (14ms)
				SetLoadedEditorAssemblies (2ms)
				RefreshPlugins (1ms)
				BeforeProcessingInitializeOnLoad (250ms)
				ProcessInitializeOnLoadAttributes (736ms)
				ProcessInitializeOnLoadMethodAttributes (41ms)
				AfterProcessingInitializeOnLoad (1ms)
				EditorAssembliesLoaded (0ms)
			ExecutionOrderSort2 (0ms)
			AwakeInstancesAfterBackupRestoration (39ms)
Platform modules already initialized, skipping
Switching build target platform(2) subTarget(0) extendedPlatform(0) -> platform(13) subTarget(537395200) extendedPlatform(0)
Refreshing native plugins compatible for Editor in 0.43 ms, found 3 plugins.
Preloading 0 native plugins for Editor in 0.00 ms.
Unloading 2300 Unused Serialized files (Serialized files now loaded: 0)
System memory in use before: 212.3 MB.
System memory in use after: 212.5 MB.

Unloading 30 unused Assets to reduce memory usage. Loaded Objects now: 2801.
Total: 2.136583 ms (FindLiveObjects: 0.133875 ms CreateObjectMapping: 0.044875 ms MarkObjects: 1.930958 ms  DeleteObjects: 0.025875 ms)

AssetImportParameters requested are different than current active one (requested -> active):
  custom:video-decoder-ogg-theora: a1e56fd34408186e4bbccfd4996cb3dc -> 
  custom:container-muxer-webm: aa71ff27fc2769a1b78a27578f13a17b -> 
  custom:container-demuxer-webm: 4f35f7cbe854078d1ac9338744f61a02 -> 
  custom:container-demuxer-ogg: 62fdf1f143b41e24485cea50d1cbac27 -> 
  custom:video-encoder-webm-vp8: eb34c28f22e8b96e1ab97ce403110664 -> 
  custom:framework-osx-AVFoundation: e770b220cccbd017edd2c1fefb359320 -> 
  custom:video-decoder-webm-vp8: 9c59270c3fd7afecdb556c50c9e8de78 -> 
  custom:graphics/normal-map-encoding: 01000000000000000000000000000000 -> 02000000000000000000000000000000
  custom:audio-decoder-ogg-vorbis: bf7c407c2cedff20999df2af8eb42d56 -> 
  custom:audio-encoder-webm-vorbis: bf7c407c2cedff20999df2af8eb42d56 -> 
========================================================================
Received Import Request.
  Time since last request: 397.617340 seconds.
  path: Assets/Resources/Prefabs/Slot.prefab
  artifactKey: Guid(06a12056aef3f458ea896a90f397357c) Importer(815301076,1909f56bfc062723c751e8b465ee728b)
Start importing Assets/Resources/Prefabs/Slot.prefab using Guid(06a12056aef3f458ea896a90f397357c) Importer(815301076,1909f56bfc062723c751e8b465ee728b) Diagnostics callstack to track who triggered the sub-import:
 #5 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #7 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #8 _dispatch_client_callout
 #9 _dispatch_async_and_wait_invoke
 #10 _dispatch_client_callout
 #11 _dispatch_main_queue_callback_4CF
 #12 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #13 __CFRunLoopRun
 #14 CFRunLoopRunSpecific
 #15 RunCurrentEventLoopInMode
 #16 ReceiveNextEventCommon
 #17 _BlockUntilNextEventMatchingListInModeWithFilter
 #18 _DPSNextEvent
 #19 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #20 -[NSApplication run]
 #21 NSApplicationMain
 #22 EditorMain(int, char const**)
 #23 main
 #24 ???
 #25 ???

Requesting import of Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000), Assets/Resources/Prefabs/Slot.prefab from editor
Resuming Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000) -> 0e506c56a4e51c10762390a6340e8b5c 
Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'unsafeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'safeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'state.state == kUpToDate'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #8 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #9 _dispatch_client_callout
 #10 _dispatch_async_and_wait_invoke
 #11 _dispatch_client_callout
 #12 _dispatch_main_queue_callback_4CF
 #13 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #14 __CFRunLoopRun
 #15 CFRunLoopRunSpecific
 #16 RunCurrentEventLoopInMode
 #17 ReceiveNextEventCommon
 #18 _BlockUntilNextEventMatchingListInModeWithFilter
 #19 _DPSNextEvent
 #20 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #21 -[NSApplication run]
 #22 NSApplicationMain
 #23 EditorMain(int, char const**)
 #24 main
 #25 ???
 #26 ???

Assertion failed on expression: 'state.artifactID == result'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #8 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #9 _dispatch_client_callout
 #10 _dispatch_async_and_wait_invoke
 #11 _dispatch_client_callout
 #12 _dispatch_main_queue_callback_4CF
 #13 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #14 __CFRunLoopRun
 #15 CFRunLoopRunSpecific
 #16 RunCurrentEventLoopInMode
 #17 ReceiveNextEventCommon
 #18 _BlockUntilNextEventMatchingListInModeWithFilter
 #19 _DPSNextEvent
 #20 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #21 -[NSApplication run]
 #22 NSApplicationMain
 #23 EditorMain(int, char const**)
 #24 main
 #25 ???
 #26 ???

Diagnostics callstack to track who triggered the sub-import:
 #5 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #8 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #9 _dispatch_client_callout
 #10 _dispatch_async_and_wait_invoke
 #11 _dispatch_client_callout
 #12 _dispatch_main_queue_callback_4CF
 #13 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #14 __CFRunLoopRun
 #15 CFRunLoopRunSpecific
 #16 RunCurrentEventLoopInMode
 #17 ReceiveNextEventCommon
 #18 _BlockUntilNextEventMatchingListInModeWithFilter
 #19 _DPSNextEvent
 #20 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #21 -[NSApplication run]
 #22 NSApplicationMain
 #23 EditorMain(int, char const**)
 #24 main
 #25 ???
 #26 ???

Requesting import of Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000), Assets/Resources/Prefabs/Slot.prefab from editor
Resuming Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000) -> 0e506c56a4e51c10762390a6340e8b5c 
Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'unsafeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'safeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'state.state == kUpToDate'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #6 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #9 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #10 _dispatch_client_callout
 #11 _dispatch_async_and_wait_invoke
 #12 _dispatch_client_callout
 #13 _dispatch_main_queue_callback_4CF
 #14 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #15 __CFRunLoopRun
 #16 CFRunLoopRunSpecific
 #17 RunCurrentEventLoopInMode
 #18 ReceiveNextEventCommon
 #19 _BlockUntilNextEventMatchingListInModeWithFilter
 #20 _DPSNextEvent
 #21 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #22 -[NSApplication run]
 #23 NSApplicationMain
 #24 EditorMain(int, char const**)
 #25 main
 #26 ???
 #27 ???

Assertion failed on expression: 'state.artifactID == result'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #6 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #9 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #10 _dispatch_client_callout
 #11 _dispatch_async_and_wait_invoke
 #12 _dispatch_client_callout
 #13 _dispatch_main_queue_callback_4CF
 #14 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #15 __CFRunLoopRun
 #16 CFRunLoopRunSpecific
 #17 RunCurrentEventLoopInMode
 #18 ReceiveNextEventCommon
 #19 _BlockUntilNextEventMatchingListInModeWithFilter
 #20 _DPSNextEvent
 #21 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #22 -[NSApplication run]
 #23 NSApplicationMain
 #24 EditorMain(int, char const**)
 #25 main
 #26 ???
 #27 ???

 -> (artifact id: '00000000000000000000000000000000') in 0.100781 seconds  code(4) message(Build asset version error: assets/resources/prefabs/slot.prefab in SourceAssetDB has modification time of '2022-10-14T08:02:03Z' while content on disk has modification time of '2022-10-14T11:14:46Z')
  ERROR: Build asset version error: assets/resources/prefabs/slot.prefab in SourceAssetDB has modification time of '2022-10-14T08:02:03Z' while content on disk has modification time of '2022-10-14T11:14:46Z'
  Import took 0.103641 seconds .

========================================================================
Received Prepare
Registering precompiled user dll's ...
Registered in 0.001470 seconds.
Begin MonoManager ReloadAssembly
Native extension for OSXStandalone target not found
Refreshing native plugins compatible for Editor in 0.65 ms, found 3 plugins.
Preloading 0 native plugins for Editor in 0.00 ms.
2022-10-14 12:45:17.753 Unity[39410:508699] NSEventModifierFlagFunction specified to -setKeyEquivalentModifierMask: for item <NSMenuItem: 0x600003f75d50 Font Asset, ke='Command-F12'>, but is only supported for system-provided menu items; will not be used
Mono: successfully reloaded assembly
- Completed reload, in  2.196 seconds
Domain Reload Profiling:
	ReloadAssembly (2197ms)
		BeginReloadAssembly (205ms)
			ExecutionOrderSort (0ms)
			DisableScriptedObjects (38ms)
			BackupInstance (0ms)
			ReleaseScriptingObjects (0ms)
			CreateAndSetChildDomain (62ms)
		EndReloadAssembly (1898ms)
			LoadAssemblies (181ms)
			RebuildTransferFunctionScriptingTraits (0ms)
			SetupTypeCache (335ms)
			ReleaseScriptCaches (1ms)
			RebuildScriptCaches (49ms)
			SetupLoadedEditorAssemblies (1051ms)
				LogAssemblyErrors (0ms)
				InitializePlatformSupportModulesInManaged (14ms)
				SetLoadedEditorAssemblies (1ms)
				RefreshPlugins (1ms)
				BeforeProcessingInitializeOnLoad (248ms)
				ProcessInitializeOnLoadAttributes (749ms)
				ProcessInitializeOnLoadMethodAttributes (36ms)
				AfterProcessingInitializeOnLoad (1ms)
				EditorAssembliesLoaded (0ms)
			ExecutionOrderSort2 (0ms)
			AwakeInstancesAfterBackupRestoration (38ms)
Platform modules already initialized, skipping
Switching build target platform(2) subTarget(0) extendedPlatform(0) -> platform(13) subTarget(537395200) extendedPlatform(0)
Refreshing native plugins compatible for Editor in 0.38 ms, found 3 plugins.
Preloading 0 native plugins for Editor in 0.00 ms.
Unloading 2300 Unused Serialized files (Serialized files now loaded: 0)
System memory in use before: 212.4 MB.
System memory in use after: 212.6 MB.

Unloading 30 unused Assets to reduce memory usage. Loaded Objects now: 2803.
Total: 2.107167 ms (FindLiveObjects: 0.121167 ms CreateObjectMapping: 0.042375 ms MarkObjects: 1.927041 ms  DeleteObjects: 0.015750 ms)

AssetImportParameters requested are different than current active one (requested -> active):
  custom:video-decoder-ogg-theora: a1e56fd34408186e4bbccfd4996cb3dc -> 
  custom:container-muxer-webm: aa71ff27fc2769a1b78a27578f13a17b -> 
  custom:container-demuxer-webm: 4f35f7cbe854078d1ac9338744f61a02 -> 
  custom:container-demuxer-ogg: 62fdf1f143b41e24485cea50d1cbac27 -> 
  custom:video-encoder-webm-vp8: eb34c28f22e8b96e1ab97ce403110664 -> 
  custom:framework-osx-AVFoundation: e770b220cccbd017edd2c1fefb359320 -> 
  custom:video-decoder-webm-vp8: 9c59270c3fd7afecdb556c50c9e8de78 -> 
  custom:graphics/normal-map-encoding: 01000000000000000000000000000000 -> 02000000000000000000000000000000
  custom:audio-decoder-ogg-vorbis: bf7c407c2cedff20999df2af8eb42d56 -> 
  custom:audio-encoder-webm-vorbis: bf7c407c2cedff20999df2af8eb42d56 -> 
========================================================================
Received Import Request.
  Time since last request: 58.763914 seconds.
  path: Assets/Resources/Prefabs/Slot.prefab
  artifactKey: Guid(06a12056aef3f458ea896a90f397357c) Importer(815301076,1909f56bfc062723c751e8b465ee728b)
Start importing Assets/Resources/Prefabs/Slot.prefab using Guid(06a12056aef3f458ea896a90f397357c) Importer(815301076,1909f56bfc062723c751e8b465ee728b) Diagnostics callstack to track who triggered the sub-import:
 #5 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #7 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #8 _dispatch_client_callout
 #9 _dispatch_async_and_wait_invoke
 #10 _dispatch_client_callout
 #11 _dispatch_main_queue_callback_4CF
 #12 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #13 __CFRunLoopRun
 #14 CFRunLoopRunSpecific
 #15 RunCurrentEventLoopInMode
 #16 ReceiveNextEventCommon
 #17 _BlockUntilNextEventMatchingListInModeWithFilter
 #18 _DPSNextEvent
 #19 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #20 -[NSApplication run]
 #21 NSApplicationMain
 #22 EditorMain(int, char const**)
 #23 main
 #24 ???
 #25 ???

Requesting import of Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000), Assets/Resources/Prefabs/Slot.prefab from editor
Resuming Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000) -> 0e506c56a4e51c10762390a6340e8b5c 
Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'unsafeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'safeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'state.state == kUpToDate'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #8 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #9 _dispatch_client_callout
 #10 _dispatch_async_and_wait_invoke
 #11 _dispatch_client_callout
 #12 _dispatch_main_queue_callback_4CF
 #13 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #14 __CFRunLoopRun
 #15 CFRunLoopRunSpecific
 #16 RunCurrentEventLoopInMode
 #17 ReceiveNextEventCommon
 #18 _BlockUntilNextEventMatchingListInModeWithFilter
 #19 _DPSNextEvent
 #20 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #21 -[NSApplication run]
 #22 NSApplicationMain
 #23 EditorMain(int, char const**)
 #24 main
 #25 ???
 #26 ???

Assertion failed on expression: 'state.artifactID == result'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #8 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #9 _dispatch_client_callout
 #10 _dispatch_async_and_wait_invoke
 #11 _dispatch_client_callout
 #12 _dispatch_main_queue_callback_4CF
 #13 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #14 __CFRunLoopRun
 #15 CFRunLoopRunSpecific
 #16 RunCurrentEventLoopInMode
 #17 ReceiveNextEventCommon
 #18 _BlockUntilNextEventMatchingListInModeWithFilter
 #19 _DPSNextEvent
 #20 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #21 -[NSApplication run]
 #22 NSApplicationMain
 #23 EditorMain(int, char const**)
 #24 main
 #25 ???
 #26 ???

Diagnostics callstack to track who triggered the sub-import:
 #5 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #8 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #9 _dispatch_client_callout
 #10 _dispatch_async_and_wait_invoke
 #11 _dispatch_client_callout
 #12 _dispatch_main_queue_callback_4CF
 #13 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #14 __CFRunLoopRun
 #15 CFRunLoopRunSpecific
 #16 RunCurrentEventLoopInMode
 #17 ReceiveNextEventCommon
 #18 _BlockUntilNextEventMatchingListInModeWithFilter
 #19 _DPSNextEvent
 #20 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #21 -[NSApplication run]
 #22 NSApplicationMain
 #23 EditorMain(int, char const**)
 #24 main
 #25 ???
 #26 ???

Requesting import of Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000), Assets/Resources/Prefabs/Slot.prefab from editor
Resuming Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000) -> 0e506c56a4e51c10762390a6340e8b5c 
Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'unsafeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'safeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'state.state == kUpToDate'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #6 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #9 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #10 _dispatch_client_callout
 #11 _dispatch_async_and_wait_invoke
 #12 _dispatch_client_callout
 #13 _dispatch_main_queue_callback_4CF
 #14 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #15 __CFRunLoopRun
 #16 CFRunLoopRunSpecific
 #17 RunCurrentEventLoopInMode
 #18 ReceiveNextEventCommon
 #19 _BlockUntilNextEventMatchingListInModeWithFilter
 #20 _DPSNextEvent
 #21 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #22 -[NSApplication run]
 #23 NSApplicationMain
 #24 EditorMain(int, char const**)
 #25 main
 #26 ???
 #27 ???

Assertion failed on expression: 'state.artifactID == result'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #6 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #9 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #10 _dispatch_client_callout
 #11 _dispatch_async_and_wait_invoke
 #12 _dispatch_client_callout
 #13 _dispatch_main_queue_callback_4CF
 #14 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #15 __CFRunLoopRun
 #16 CFRunLoopRunSpecific
 #17 RunCurrentEventLoopInMode
 #18 ReceiveNextEventCommon
 #19 _BlockUntilNextEventMatchingListInModeWithFilter
 #20 _DPSNextEvent
 #21 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #22 -[NSApplication run]
 #23 NSApplicationMain
 #24 EditorMain(int, char const**)
 #25 main
 #26 ???
 #27 ???

 -> (artifact id: '00000000000000000000000000000000') in 0.100531 seconds  code(4) message(Build asset version error: assets/resources/prefabs/slot.prefab in SourceAssetDB has modification time of '2022-10-14T08:02:03Z' while content on disk has modification time of '2022-10-14T11:14:46Z')
  ERROR: Build asset version error: assets/resources/prefabs/slot.prefab in SourceAssetDB has modification time of '2022-10-14T08:02:03Z' while content on disk has modification time of '2022-10-14T11:14:46Z'
  Import took 0.103321 seconds .

========================================================================
Received Prepare
Registering precompiled user dll's ...
Registered in 0.001419 seconds.
Begin MonoManager ReloadAssembly
Native extension for OSXStandalone target not found
Refreshing native plugins compatible for Editor in 0.57 ms, found 3 plugins.
Preloading 0 native plugins for Editor in 0.00 ms.
2022-10-14 12:46:14.460 Unity[39410:508699] NSEventModifierFlagFunction specified to -setKeyEquivalentModifierMask: for item <NSMenuItem: 0x600003c07c60 Font Asset, ke='Command-F12'>, but is only supported for system-provided menu items; will not be used
Mono: successfully reloaded assembly
- Completed reload, in  2.308 seconds
Domain Reload Profiling:
	ReloadAssembly (2309ms)
		BeginReloadAssembly (201ms)
			ExecutionOrderSort (0ms)
			DisableScriptedObjects (38ms)
			BackupInstance (0ms)
			ReleaseScriptingObjects (0ms)
			CreateAndSetChildDomain (61ms)
		EndReloadAssembly (2015ms)
			LoadAssemblies (175ms)
			RebuildTransferFunctionScriptingTraits (0ms)
			SetupTypeCache (344ms)
			ReleaseScriptCaches (1ms)
			RebuildScriptCaches (53ms)
			SetupLoadedEditorAssemblies (1147ms)
				LogAssemblyErrors (0ms)
				InitializePlatformSupportModulesInManaged (14ms)
				SetLoadedEditorAssemblies (2ms)
				RefreshPlugins (1ms)
				BeforeProcessingInitializeOnLoad (275ms)
				ProcessInitializeOnLoadAttributes (813ms)
				ProcessInitializeOnLoadMethodAttributes (41ms)
				AfterProcessingInitializeOnLoad (1ms)
				EditorAssembliesLoaded (0ms)
			ExecutionOrderSort2 (0ms)
			AwakeInstancesAfterBackupRestoration (43ms)
Platform modules already initialized, skipping
Switching build target platform(2) subTarget(0) extendedPlatform(0) -> platform(13) subTarget(537395200) extendedPlatform(0)
Refreshing native plugins compatible for Editor in 0.47 ms, found 3 plugins.
Preloading 0 native plugins for Editor in 0.00 ms.
Unloading 2300 Unused Serialized files (Serialized files now loaded: 0)
System memory in use before: 212.7 MB.
System memory in use after: 212.9 MB.

Unloading 30 unused Assets to reduce memory usage. Loaded Objects now: 2805.
Total: 2.262500 ms (FindLiveObjects: 0.147041 ms CreateObjectMapping: 0.046542 ms MarkObjects: 2.052125 ms  DeleteObjects: 0.015917 ms)

AssetImportParameters requested are different than current active one (requested -> active):
  custom:video-decoder-ogg-theora: a1e56fd34408186e4bbccfd4996cb3dc -> 
  custom:container-muxer-webm: aa71ff27fc2769a1b78a27578f13a17b -> 
  custom:container-demuxer-webm: 4f35f7cbe854078d1ac9338744f61a02 -> 
  custom:container-demuxer-ogg: 62fdf1f143b41e24485cea50d1cbac27 -> 
  custom:video-encoder-webm-vp8: eb34c28f22e8b96e1ab97ce403110664 -> 
  custom:framework-osx-AVFoundation: e770b220cccbd017edd2c1fefb359320 -> 
  custom:video-decoder-webm-vp8: 9c59270c3fd7afecdb556c50c9e8de78 -> 
  custom:graphics/normal-map-encoding: 01000000000000000000000000000000 -> 02000000000000000000000000000000
  custom:audio-decoder-ogg-vorbis: bf7c407c2cedff20999df2af8eb42d56 -> 
  custom:audio-encoder-webm-vorbis: bf7c407c2cedff20999df2af8eb42d56 -> 
========================================================================
Received Import Request.
  Time since last request: 54.075326 seconds.
  path: Assets/Resources/Prefabs/Slot.prefab
  artifactKey: Guid(06a12056aef3f458ea896a90f397357c) Importer(815301076,1909f56bfc062723c751e8b465ee728b)
Start importing Assets/Resources/Prefabs/Slot.prefab using Guid(06a12056aef3f458ea896a90f397357c) Importer(815301076,1909f56bfc062723c751e8b465ee728b) Diagnostics callstack to track who triggered the sub-import:
 #5 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #7 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #8 _dispatch_client_callout
 #9 _dispatch_async_and_wait_invoke
 #10 _dispatch_client_callout
 #11 _dispatch_main_queue_callback_4CF
 #12 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #13 __CFRunLoopRun
 #14 CFRunLoopRunSpecific
 #15 RunCurrentEventLoopInMode
 #16 ReceiveNextEventCommon
 #17 _BlockUntilNextEventMatchingListInModeWithFilter
 #18 _DPSNextEvent
 #19 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #20 -[NSApplication run]
 #21 NSApplicationMain
 #22 EditorMain(int, char const**)
 #23 main
 #24 ???
 #25 ???

Requesting import of Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000), Assets/Resources/Prefabs/Slot.prefab from editor
Resuming Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000) -> 0e506c56a4e51c10762390a6340e8b5c 
Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'unsafeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'safeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'state.state == kUpToDate'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #8 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #9 _dispatch_client_callout
 #10 _dispatch_async_and_wait_invoke
 #11 _dispatch_client_callout
 #12 _dispatch_main_queue_callback_4CF
 #13 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #14 __CFRunLoopRun
 #15 CFRunLoopRunSpecific
 #16 RunCurrentEventLoopInMode
 #17 ReceiveNextEventCommon
 #18 _BlockUntilNextEventMatchingListInModeWithFilter
 #19 _DPSNextEvent
 #20 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #21 -[NSApplication run]
 #22 NSApplicationMain
 #23 EditorMain(int, char const**)
 #24 main
 #25 ???
 #26 ???

Assertion failed on expression: 'state.artifactID == result'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #8 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #9 _dispatch_client_callout
 #10 _dispatch_async_and_wait_invoke
 #11 _dispatch_client_callout
 #12 _dispatch_main_queue_callback_4CF
 #13 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #14 __CFRunLoopRun
 #15 CFRunLoopRunSpecific
 #16 RunCurrentEventLoopInMode
 #17 ReceiveNextEventCommon
 #18 _BlockUntilNextEventMatchingListInModeWithFilter
 #19 _DPSNextEvent
 #20 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #21 -[NSApplication run]
 #22 NSApplicationMain
 #23 EditorMain(int, char const**)
 #24 main
 #25 ???
 #26 ???

Diagnostics callstack to track who triggered the sub-import:
 #5 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #8 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #9 _dispatch_client_callout
 #10 _dispatch_async_and_wait_invoke
 #11 _dispatch_client_callout
 #12 _dispatch_main_queue_callback_4CF
 #13 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #14 __CFRunLoopRun
 #15 CFRunLoopRunSpecific
 #16 RunCurrentEventLoopInMode
 #17 ReceiveNextEventCommon
 #18 _BlockUntilNextEventMatchingListInModeWithFilter
 #19 _DPSNextEvent
 #20 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #21 -[NSApplication run]
 #22 NSApplicationMain
 #23 EditorMain(int, char const**)
 #24 main
 #25 ???
 #26 ???

Requesting import of Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000), Assets/Resources/Prefabs/Slot.prefab from editor
Resuming Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000) -> 0e506c56a4e51c10762390a6340e8b5c 
Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'unsafeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'safeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'state.state == kUpToDate'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #6 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #9 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #10 _dispatch_client_callout
 #11 _dispatch_async_and_wait_invoke
 #12 _dispatch_client_callout
 #13 _dispatch_main_queue_callback_4CF
 #14 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #15 __CFRunLoopRun
 #16 CFRunLoopRunSpecific
 #17 RunCurrentEventLoopInMode
 #18 ReceiveNextEventCommon
 #19 _BlockUntilNextEventMatchingListInModeWithFilter
 #20 _DPSNextEvent
 #21 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #22 -[NSApplication run]
 #23 NSApplicationMain
 #24 EditorMain(int, char const**)
 #25 main
 #26 ???
 #27 ???

Assertion failed on expression: 'state.artifactID == result'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #6 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #9 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #10 _dispatch_client_callout
 #11 _dispatch_async_and_wait_invoke
 #12 _dispatch_client_callout
 #13 _dispatch_main_queue_callback_4CF
 #14 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #15 __CFRunLoopRun
 #16 CFRunLoopRunSpecific
 #17 RunCurrentEventLoopInMode
 #18 ReceiveNextEventCommon
 #19 _BlockUntilNextEventMatchingListInModeWithFilter
 #20 _DPSNextEvent
 #21 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #22 -[NSApplication run]
 #23 NSApplicationMain
 #24 EditorMain(int, char const**)
 #25 main
 #26 ???
 #27 ???

 -> (artifact id: '00000000000000000000000000000000') in 0.101725 seconds  code(4) message(Build asset version error: assets/resources/prefabs/slot.prefab in SourceAssetDB has modification time of '2022-10-14T08:02:03Z' while content on disk has modification time of '2022-10-14T11:14:46Z')
  ERROR: Build asset version error: assets/resources/prefabs/slot.prefab in SourceAssetDB has modification time of '2022-10-14T08:02:03Z' while content on disk has modification time of '2022-10-14T11:14:46Z'
  Import took 0.104631 seconds .

========================================================================
Received Prepare
Registering precompiled user dll's ...
Registered in 0.001513 seconds.
Begin MonoManager ReloadAssembly
Native extension for OSXStandalone target not found
Refreshing native plugins compatible for Editor in 0.50 ms, found 3 plugins.
Preloading 0 native plugins for Editor in 0.00 ms.
2022-10-14 12:46:40.995 Unity[39410:508699] NSEventModifierFlagFunction specified to -setKeyEquivalentModifierMask: for item <NSMenuItem: 0x600003c06b50 Font Asset, ke='Command-F12'>, but is only supported for system-provided menu items; will not be used
Mono: successfully reloaded assembly
- Completed reload, in  2.214 seconds
Domain Reload Profiling:
	ReloadAssembly (2215ms)
		BeginReloadAssembly (198ms)
			ExecutionOrderSort (0ms)
			DisableScriptedObjects (39ms)
			BackupInstance (0ms)
			ReleaseScriptingObjects (0ms)
			CreateAndSetChildDomain (61ms)
		EndReloadAssembly (1925ms)
			LoadAssemblies (175ms)
			RebuildTransferFunctionScriptingTraits (0ms)
			SetupTypeCache (334ms)
			ReleaseScriptCaches (1ms)
			RebuildScriptCaches (49ms)
			SetupLoadedEditorAssemblies (1078ms)
				LogAssemblyErrors (0ms)
				InitializePlatformSupportModulesInManaged (15ms)
				SetLoadedEditorAssemblies (2ms)
				RefreshPlugins (1ms)
				BeforeProcessingInitializeOnLoad (253ms)
				ProcessInitializeOnLoadAttributes (768ms)
				ProcessInitializeOnLoadMethodAttributes (38ms)
				AfterProcessingInitializeOnLoad (1ms)
				EditorAssembliesLoaded (0ms)
			ExecutionOrderSort2 (0ms)
			AwakeInstancesAfterBackupRestoration (41ms)
Platform modules already initialized, skipping
Switching build target platform(2) subTarget(0) extendedPlatform(0) -> platform(13) subTarget(537395200) extendedPlatform(0)
Refreshing native plugins compatible for Editor in 0.50 ms, found 3 plugins.
Preloading 0 native plugins for Editor in 0.00 ms.
Unloading 2300 Unused Serialized files (Serialized files now loaded: 0)
System memory in use before: 212.9 MB.
System memory in use after: 213.2 MB.

Unloading 30 unused Assets to reduce memory usage. Loaded Objects now: 2807.
Total: 2.154625 ms (FindLiveObjects: 0.127333 ms CreateObjectMapping: 0.044417 ms MarkObjects: 1.962958 ms  DeleteObjects: 0.019166 ms)

AssetImportParameters requested are different than current active one (requested -> active):
  custom:video-decoder-ogg-theora: a1e56fd34408186e4bbccfd4996cb3dc -> 
  custom:container-muxer-webm: aa71ff27fc2769a1b78a27578f13a17b -> 
  custom:container-demuxer-webm: 4f35f7cbe854078d1ac9338744f61a02 -> 
  custom:container-demuxer-ogg: 62fdf1f143b41e24485cea50d1cbac27 -> 
  custom:video-encoder-webm-vp8: eb34c28f22e8b96e1ab97ce403110664 -> 
  custom:framework-osx-AVFoundation: e770b220cccbd017edd2c1fefb359320 -> 
  custom:video-decoder-webm-vp8: 9c59270c3fd7afecdb556c50c9e8de78 -> 
  custom:graphics/normal-map-encoding: 01000000000000000000000000000000 -> 02000000000000000000000000000000
  custom:audio-decoder-ogg-vorbis: bf7c407c2cedff20999df2af8eb42d56 -> 
  custom:audio-encoder-webm-vorbis: bf7c407c2cedff20999df2af8eb42d56 -> 
========================================================================
Received Import Request.
  Time since last request: 24.305086 seconds.
  path: Assets/Resources/Prefabs/Slot.prefab
  artifactKey: Guid(06a12056aef3f458ea896a90f397357c) Importer(815301076,1909f56bfc062723c751e8b465ee728b)
Start importing Assets/Resources/Prefabs/Slot.prefab using Guid(06a12056aef3f458ea896a90f397357c) Importer(815301076,1909f56bfc062723c751e8b465ee728b) Diagnostics callstack to track who triggered the sub-import:
 #5 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #7 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #8 _dispatch_client_callout
 #9 _dispatch_async_and_wait_invoke
 #10 _dispatch_client_callout
 #11 _dispatch_main_queue_callback_4CF
 #12 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #13 __CFRunLoopRun
 #14 CFRunLoopRunSpecific
 #15 RunCurrentEventLoopInMode
 #16 ReceiveNextEventCommon
 #17 _BlockUntilNextEventMatchingListInModeWithFilter
 #18 _DPSNextEvent
 #19 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #20 -[NSApplication run]
 #21 NSApplicationMain
 #22 EditorMain(int, char const**)
 #23 main
 #24 ???
 #25 ???

Requesting import of Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000), Assets/Resources/Prefabs/Slot.prefab from editor
Resuming Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000) -> 0e506c56a4e51c10762390a6340e8b5c 
Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'unsafeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'safeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'state.state == kUpToDate'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #8 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #9 _dispatch_client_callout
 #10 _dispatch_async_and_wait_invoke
 #11 _dispatch_client_callout
 #12 _dispatch_main_queue_callback_4CF
 #13 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #14 __CFRunLoopRun
 #15 CFRunLoopRunSpecific
 #16 RunCurrentEventLoopInMode
 #17 ReceiveNextEventCommon
 #18 _BlockUntilNextEventMatchingListInModeWithFilter
 #19 _DPSNextEvent
 #20 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #21 -[NSApplication run]
 #22 NSApplicationMain
 #23 EditorMain(int, char const**)
 #24 main
 #25 ???
 #26 ???

Assertion failed on expression: 'state.artifactID == result'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #8 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #9 _dispatch_client_callout
 #10 _dispatch_async_and_wait_invoke
 #11 _dispatch_client_callout
 #12 _dispatch_main_queue_callback_4CF
 #13 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #14 __CFRunLoopRun
 #15 CFRunLoopRunSpecific
 #16 RunCurrentEventLoopInMode
 #17 ReceiveNextEventCommon
 #18 _BlockUntilNextEventMatchingListInModeWithFilter
 #19 _DPSNextEvent
 #20 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #21 -[NSApplication run]
 #22 NSApplicationMain
 #23 EditorMain(int, char const**)
 #24 main
 #25 ???
 #26 ???

Diagnostics callstack to track who triggered the sub-import:
 #5 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #8 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #9 _dispatch_client_callout
 #10 _dispatch_async_and_wait_invoke
 #11 _dispatch_client_callout
 #12 _dispatch_main_queue_callback_4CF
 #13 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #14 __CFRunLoopRun
 #15 CFRunLoopRunSpecific
 #16 RunCurrentEventLoopInMode
 #17 ReceiveNextEventCommon
 #18 _BlockUntilNextEventMatchingListInModeWithFilter
 #19 _DPSNextEvent
 #20 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #21 -[NSApplication run]
 #22 NSApplicationMain
 #23 EditorMain(int, char const**)
 #24 main
 #25 ???
 #26 ???

Requesting import of Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000), Assets/Resources/Prefabs/Slot.prefab from editor
Resuming Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000) -> 0e506c56a4e51c10762390a6340e8b5c 
Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'unsafeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'safeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'state.state == kUpToDate'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #6 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #9 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #10 _dispatch_client_callout
 #11 _dispatch_async_and_wait_invoke
 #12 _dispatch_client_callout
 #13 _dispatch_main_queue_callback_4CF
 #14 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #15 __CFRunLoopRun
 #16 CFRunLoopRunSpecific
 #17 RunCurrentEventLoopInMode
 #18 ReceiveNextEventCommon
 #19 _BlockUntilNextEventMatchingListInModeWithFilter
 #20 _DPSNextEvent
 #21 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #22 -[NSApplication run]
 #23 NSApplicationMain
 #24 EditorMain(int, char const**)
 #25 main
 #26 ???
 #27 ???

Assertion failed on expression: 'state.artifactID == result'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #6 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #9 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #10 _dispatch_client_callout
 #11 _dispatch_async_and_wait_invoke
 #12 _dispatch_client_callout
 #13 _dispatch_main_queue_callback_4CF
 #14 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #15 __CFRunLoopRun
 #16 CFRunLoopRunSpecific
 #17 RunCurrentEventLoopInMode
 #18 ReceiveNextEventCommon
 #19 _BlockUntilNextEventMatchingListInModeWithFilter
 #20 _DPSNextEvent
 #21 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #22 -[NSApplication run]
 #23 NSApplicationMain
 #24 EditorMain(int, char const**)
 #25 main
 #26 ???
 #27 ???

 -> (artifact id: '00000000000000000000000000000000') in 0.096061 seconds  code(4) message(Build asset version error: assets/resources/prefabs/slot.prefab in SourceAssetDB has modification time of '2022-10-14T08:02:03Z' while content on disk has modification time of '2022-10-14T11:14:46Z')
  ERROR: Build asset version error: assets/resources/prefabs/slot.prefab in SourceAssetDB has modification time of '2022-10-14T08:02:03Z' while content on disk has modification time of '2022-10-14T11:14:46Z'
  Import took 0.098518 seconds .

========================================================================
Received Import Request.
  Time since last request: 9.106233 seconds.
  path: Assets/Resources/Prefabs/Slot.prefab
  artifactKey: Guid(06a12056aef3f458ea896a90f397357c) Importer(815301076,1909f56bfc062723c751e8b465ee728b)
Start importing Assets/Resources/Prefabs/Slot.prefab using Guid(06a12056aef3f458ea896a90f397357c) Importer(815301076,1909f56bfc062723c751e8b465ee728b) Diagnostics callstack to track who triggered the sub-import:
 #5 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #7 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #8 _dispatch_client_callout
 #9 _dispatch_async_and_wait_invoke
 #10 _dispatch_client_callout
 #11 _dispatch_main_queue_callback_4CF
 #12 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #13 __CFRunLoopRun
 #14 CFRunLoopRunSpecific
 #15 RunCurrentEventLoopInMode
 #16 ReceiveNextEventCommon
 #17 _BlockUntilNextEventMatchingListInModeWithFilter
 #18 _DPSNextEvent
 #19 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #20 -[NSApplication run]
 #21 NSApplicationMain
 #22 EditorMain(int, char const**)
 #23 main
 #24 ???
 #25 ???

Requesting import of Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000), Assets/Resources/Prefabs/Slot.prefab from editor
Resuming Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000) -> 0e506c56a4e51c10762390a6340e8b5c 
Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'unsafeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'safeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'state.state == kUpToDate'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #8 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #9 _dispatch_client_callout
 #10 _dispatch_async_and_wait_invoke
 #11 _dispatch_client_callout
 #12 _dispatch_main_queue_callback_4CF
 #13 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #14 __CFRunLoopRun
 #15 CFRunLoopRunSpecific
 #16 RunCurrentEventLoopInMode
 #17 ReceiveNextEventCommon
 #18 _BlockUntilNextEventMatchingListInModeWithFilter
 #19 _DPSNextEvent
 #20 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #21 -[NSApplication run]
 #22 NSApplicationMain
 #23 EditorMain(int, char const**)
 #24 main
 #25 ???
 #26 ???

Assertion failed on expression: 'state.artifactID == result'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #8 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #9 _dispatch_client_callout
 #10 _dispatch_async_and_wait_invoke
 #11 _dispatch_client_callout
 #12 _dispatch_main_queue_callback_4CF
 #13 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #14 __CFRunLoopRun
 #15 CFRunLoopRunSpecific
 #16 RunCurrentEventLoopInMode
 #17 ReceiveNextEventCommon
 #18 _BlockUntilNextEventMatchingListInModeWithFilter
 #19 _DPSNextEvent
 #20 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #21 -[NSApplication run]
 #22 NSApplicationMain
 #23 EditorMain(int, char const**)
 #24 main
 #25 ???
 #26 ???

Diagnostics callstack to track who triggered the sub-import:
 #5 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #8 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #9 _dispatch_client_callout
 #10 _dispatch_async_and_wait_invoke
 #11 _dispatch_client_callout
 #12 _dispatch_main_queue_callback_4CF
 #13 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #14 __CFRunLoopRun
 #15 CFRunLoopRunSpecific
 #16 RunCurrentEventLoopInMode
 #17 ReceiveNextEventCommon
 #18 _BlockUntilNextEventMatchingListInModeWithFilter
 #19 _DPSNextEvent
 #20 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #21 -[NSApplication run]
 #22 NSApplicationMain
 #23 EditorMain(int, char const**)
 #24 main
 #25 ???
 #26 ???

Requesting import of Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000), Assets/Resources/Prefabs/Slot.prefab from editor
Resuming Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000) -> 0e506c56a4e51c10762390a6340e8b5c 
Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'unsafeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'safeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'state.state == kUpToDate'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #6 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #9 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #10 _dispatch_client_callout
 #11 _dispatch_async_and_wait_invoke
 #12 _dispatch_client_callout
 #13 _dispatch_main_queue_callback_4CF
 #14 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #15 __CFRunLoopRun
 #16 CFRunLoopRunSpecific
 #17 RunCurrentEventLoopInMode
 #18 ReceiveNextEventCommon
 #19 _BlockUntilNextEventMatchingListInModeWithFilter
 #20 _DPSNextEvent
 #21 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #22 -[NSApplication run]
 #23 NSApplicationMain
 #24 EditorMain(int, char const**)
 #25 main
 #26 ???
 #27 ???

Assertion failed on expression: 'state.artifactID == result'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #6 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #9 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #10 _dispatch_client_callout
 #11 _dispatch_async_and_wait_invoke
 #12 _dispatch_client_callout
 #13 _dispatch_main_queue_callback_4CF
 #14 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #15 __CFRunLoopRun
 #16 CFRunLoopRunSpecific
 #17 RunCurrentEventLoopInMode
 #18 ReceiveNextEventCommon
 #19 _BlockUntilNextEventMatchingListInModeWithFilter
 #20 _DPSNextEvent
 #21 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #22 -[NSApplication run]
 #23 NSApplicationMain
 #24 EditorMain(int, char const**)
 #25 main
 #26 ???
 #27 ???

 -> (artifact id: '00000000000000000000000000000000') in 0.097971 seconds  code(4) message(Build asset version error: assets/resources/prefabs/slot.prefab in SourceAssetDB has modification time of '2022-10-14T08:02:03Z' while content on disk has modification time of '2022-10-14T11:14:46Z')
  ERROR: Build asset version error: assets/resources/prefabs/slot.prefab in SourceAssetDB has modification time of '2022-10-14T08:02:03Z' while content on disk has modification time of '2022-10-14T11:14:46Z'
  Import took 0.100752 seconds .

========================================================================
Received Prepare
Registering precompiled user dll's ...
Registered in 0.004749 seconds.
Begin MonoManager ReloadAssembly
Native extension for OSXStandalone target not found
Refreshing native plugins compatible for Editor in 0.54 ms, found 3 plugins.
Preloading 0 native plugins for Editor in 0.00 ms.
2022-10-14 12:51:18.363 Unity[39410:508699] NSEventModifierFlagFunction specified to -setKeyEquivalentModifierMask: for item <NSMenuItem: 0x600003c06c30 Font Asset, ke='Command-F12'>, but is only supported for system-provided menu items; will not be used
Mono: successfully reloaded assembly
- Completed reload, in  2.610 seconds
Domain Reload Profiling:
	ReloadAssembly (2611ms)
		BeginReloadAssembly (304ms)
			ExecutionOrderSort (0ms)
			DisableScriptedObjects (42ms)
			BackupInstance (0ms)
			ReleaseScriptingObjects (0ms)
			CreateAndSetChildDomain (138ms)
		EndReloadAssembly (2205ms)
			LoadAssemblies (229ms)
			RebuildTransferFunctionScriptingTraits (0ms)
			SetupTypeCache (369ms)
			ReleaseScriptCaches (1ms)
			RebuildScriptCaches (53ms)
			SetupLoadedEditorAssemblies (1241ms)
				LogAssemblyErrors (0ms)
				InitializePlatformSupportModulesInManaged (15ms)
				SetLoadedEditorAssemblies (2ms)
				RefreshPlugins (1ms)
				BeforeProcessingInitializeOnLoad (269ms)
				ProcessInitializeOnLoadAttributes (904ms)
				ProcessInitializeOnLoadMethodAttributes (49ms)
				AfterProcessingInitializeOnLoad (1ms)
				EditorAssembliesLoaded (0ms)
			ExecutionOrderSort2 (0ms)
			AwakeInstancesAfterBackupRestoration (46ms)
Platform modules already initialized, skipping
Switching build target platform(2) subTarget(0) extendedPlatform(0) -> platform(13) subTarget(537395200) extendedPlatform(0)
Refreshing native plugins compatible for Editor in 0.54 ms, found 3 plugins.
Preloading 0 native plugins for Editor in 0.00 ms.
Unloading 2300 Unused Serialized files (Serialized files now loaded: 0)
System memory in use before: 213.2 MB.
System memory in use after: 213.4 MB.

Unloading 30 unused Assets to reduce memory usage. Loaded Objects now: 2809.
Total: 2.328791 ms (FindLiveObjects: 0.170209 ms CreateObjectMapping: 0.047834 ms MarkObjects: 2.088000 ms  DeleteObjects: 0.021750 ms)

AssetImportParameters requested are different than current active one (requested -> active):
  custom:video-decoder-ogg-theora: a1e56fd34408186e4bbccfd4996cb3dc -> 
  custom:container-muxer-webm: aa71ff27fc2769a1b78a27578f13a17b -> 
  custom:container-demuxer-webm: 4f35f7cbe854078d1ac9338744f61a02 -> 
  custom:container-demuxer-ogg: 62fdf1f143b41e24485cea50d1cbac27 -> 
  custom:video-encoder-webm-vp8: eb34c28f22e8b96e1ab97ce403110664 -> 
  custom:framework-osx-AVFoundation: e770b220cccbd017edd2c1fefb359320 -> 
  custom:video-decoder-webm-vp8: 9c59270c3fd7afecdb556c50c9e8de78 -> 
  custom:graphics/normal-map-encoding: 01000000000000000000000000000000 -> 02000000000000000000000000000000
  custom:audio-decoder-ogg-vorbis: bf7c407c2cedff20999df2af8eb42d56 -> 
  custom:audio-encoder-webm-vorbis: bf7c407c2cedff20999df2af8eb42d56 -> 
========================================================================
Received Prepare
Registering precompiled user dll's ...
Registered in 0.001477 seconds.
Begin MonoManager ReloadAssembly
Native extension for OSXStandalone target not found
Refreshing native plugins compatible for Editor in 0.52 ms, found 3 plugins.
Preloading 0 native plugins for Editor in 0.00 ms.
2022-10-14 12:51:25.763 Unity[39410:508699] NSEventModifierFlagFunction specified to -setKeyEquivalentModifierMask: for item <NSMenuItem: 0x600003c06d10 Font Asset, ke='Command-F12'>, but is only supported for system-provided menu items; will not be used
Mono: successfully reloaded assembly
- Completed reload, in  2.310 seconds
Domain Reload Profiling:
	ReloadAssembly (2311ms)
		BeginReloadAssembly (202ms)
			ExecutionOrderSort (0ms)
			DisableScriptedObjects (38ms)
			BackupInstance (0ms)
			ReleaseScriptingObjects (0ms)
			CreateAndSetChildDomain (64ms)
		EndReloadAssembly (2014ms)
			LoadAssemblies (180ms)
			RebuildTransferFunctionScriptingTraits (0ms)
			SetupTypeCache (351ms)
			ReleaseScriptCaches (1ms)
			RebuildScriptCaches (53ms)
			SetupLoadedEditorAssemblies (1124ms)
				LogAssemblyErrors (0ms)
				InitializePlatformSupportModulesInManaged (15ms)
				SetLoadedEditorAssemblies (2ms)
				RefreshPlugins (1ms)
				BeforeProcessingInitializeOnLoad (270ms)
				ProcessInitializeOnLoadAttributes (796ms)
				ProcessInitializeOnLoadMethodAttributes (40ms)
				AfterProcessingInitializeOnLoad (1ms)
				EditorAssembliesLoaded (0ms)
			ExecutionOrderSort2 (0ms)
			AwakeInstancesAfterBackupRestoration (41ms)
Platform modules already initialized, skipping
Switching build target platform(2) subTarget(0) extendedPlatform(0) -> platform(13) subTarget(537395200) extendedPlatform(0)
Refreshing native plugins compatible for Editor in 0.40 ms, found 3 plugins.
Preloading 0 native plugins for Editor in 0.00 ms.
Unloading 2300 Unused Serialized files (Serialized files now loaded: 0)
System memory in use before: 213.4 MB.
System memory in use after: 213.6 MB.

Unloading 30 unused Assets to reduce memory usage. Loaded Objects now: 2811.
Total: 2.147292 ms (FindLiveObjects: 0.137000 ms CreateObjectMapping: 0.043625 ms MarkObjects: 1.951791 ms  DeleteObjects: 0.014000 ms)

AssetImportParameters requested are different than current active one (requested -> active):
  custom:video-decoder-ogg-theora: a1e56fd34408186e4bbccfd4996cb3dc -> 
  custom:container-muxer-webm: aa71ff27fc2769a1b78a27578f13a17b -> 
  custom:container-demuxer-webm: 4f35f7cbe854078d1ac9338744f61a02 -> 
  custom:container-demuxer-ogg: 62fdf1f143b41e24485cea50d1cbac27 -> 
  custom:video-encoder-webm-vp8: eb34c28f22e8b96e1ab97ce403110664 -> 
  custom:framework-osx-AVFoundation: e770b220cccbd017edd2c1fefb359320 -> 
  custom:video-decoder-webm-vp8: 9c59270c3fd7afecdb556c50c9e8de78 -> 
  custom:graphics/normal-map-encoding: 01000000000000000000000000000000 -> 02000000000000000000000000000000
  custom:audio-decoder-ogg-vorbis: bf7c407c2cedff20999df2af8eb42d56 -> 
  custom:audio-encoder-webm-vorbis: bf7c407c2cedff20999df2af8eb42d56 -> 
========================================================================
Received Import Request.
  Time since last request: 275.498958 seconds.
  path: Assets/Resources/Prefabs/Slot.prefab
  artifactKey: Guid(06a12056aef3f458ea896a90f397357c) Importer(815301076,1909f56bfc062723c751e8b465ee728b)
Start importing Assets/Resources/Prefabs/Slot.prefab using Guid(06a12056aef3f458ea896a90f397357c) Importer(815301076,1909f56bfc062723c751e8b465ee728b) Diagnostics callstack to track who triggered the sub-import:
 #5 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #7 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #8 _dispatch_client_callout
 #9 _dispatch_async_and_wait_invoke
 #10 _dispatch_client_callout
 #11 _dispatch_main_queue_callback_4CF
 #12 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #13 __CFRunLoopRun
 #14 CFRunLoopRunSpecific
 #15 RunCurrentEventLoopInMode
 #16 ReceiveNextEventCommon
 #17 _BlockUntilNextEventMatchingListInModeWithFilter
 #18 _DPSNextEvent
 #19 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #20 -[NSApplication run]
 #21 NSApplicationMain
 #22 EditorMain(int, char const**)
 #23 main
 #24 ???
 #25 ???

Requesting import of Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000), Assets/Resources/Prefabs/Slot.prefab from editor
Resuming Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000) -> 0e506c56a4e51c10762390a6340e8b5c 
Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'unsafeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'safeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'state.state == kUpToDate'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #8 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #9 _dispatch_client_callout
 #10 _dispatch_async_and_wait_invoke
 #11 _dispatch_client_callout
 #12 _dispatch_main_queue_callback_4CF
 #13 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #14 __CFRunLoopRun
 #15 CFRunLoopRunSpecific
 #16 RunCurrentEventLoopInMode
 #17 ReceiveNextEventCommon
 #18 _BlockUntilNextEventMatchingListInModeWithFilter
 #19 _DPSNextEvent
 #20 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #21 -[NSApplication run]
 #22 NSApplicationMain
 #23 EditorMain(int, char const**)
 #24 main
 #25 ???
 #26 ???

Assertion failed on expression: 'state.artifactID == result'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #8 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #9 _dispatch_client_callout
 #10 _dispatch_async_and_wait_invoke
 #11 _dispatch_client_callout
 #12 _dispatch_main_queue_callback_4CF
 #13 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #14 __CFRunLoopRun
 #15 CFRunLoopRunSpecific
 #16 RunCurrentEventLoopInMode
 #17 ReceiveNextEventCommon
 #18 _BlockUntilNextEventMatchingListInModeWithFilter
 #19 _DPSNextEvent
 #20 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #21 -[NSApplication run]
 #22 NSApplicationMain
 #23 EditorMain(int, char const**)
 #24 main
 #25 ???
 #26 ???

Diagnostics callstack to track who triggered the sub-import:
 #5 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #8 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #9 _dispatch_client_callout
 #10 _dispatch_async_and_wait_invoke
 #11 _dispatch_client_callout
 #12 _dispatch_main_queue_callback_4CF
 #13 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #14 __CFRunLoopRun
 #15 CFRunLoopRunSpecific
 #16 RunCurrentEventLoopInMode
 #17 ReceiveNextEventCommon
 #18 _BlockUntilNextEventMatchingListInModeWithFilter
 #19 _DPSNextEvent
 #20 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #21 -[NSApplication run]
 #22 NSApplicationMain
 #23 EditorMain(int, char const**)
 #24 main
 #25 ???
 #26 ???

Requesting import of Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000), Assets/Resources/Prefabs/Slot.prefab from editor
Resuming Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000) -> 0e506c56a4e51c10762390a6340e8b5c 
Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'unsafeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'safeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'state.state == kUpToDate'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #6 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #9 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #10 _dispatch_client_callout
 #11 _dispatch_async_and_wait_invoke
 #12 _dispatch_client_callout
 #13 _dispatch_main_queue_callback_4CF
 #14 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #15 __CFRunLoopRun
 #16 CFRunLoopRunSpecific
 #17 RunCurrentEventLoopInMode
 #18 ReceiveNextEventCommon
 #19 _BlockUntilNextEventMatchingListInModeWithFilter
 #20 _DPSNextEvent
 #21 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #22 -[NSApplication run]
 #23 NSApplicationMain
 #24 EditorMain(int, char const**)
 #25 main
 #26 ???
 #27 ???

Assertion failed on expression: 'state.artifactID == result'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #6 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #9 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #10 _dispatch_client_callout
 #11 _dispatch_async_and_wait_invoke
 #12 _dispatch_client_callout
 #13 _dispatch_main_queue_callback_4CF
 #14 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #15 __CFRunLoopRun
 #16 CFRunLoopRunSpecific
 #17 RunCurrentEventLoopInMode
 #18 ReceiveNextEventCommon
 #19 _BlockUntilNextEventMatchingListInModeWithFilter
 #20 _DPSNextEvent
 #21 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #22 -[NSApplication run]
 #23 NSApplicationMain
 #24 EditorMain(int, char const**)
 #25 main
 #26 ???
 #27 ???

 -> (artifact id: '00000000000000000000000000000000') in 0.101042 seconds  code(4) message(Build asset version error: assets/resources/prefabs/slot.prefab in SourceAssetDB has modification time of '2022-10-14T08:02:03Z' while content on disk has modification time of '2022-10-14T11:14:46Z')
  ERROR: Build asset version error: assets/resources/prefabs/slot.prefab in SourceAssetDB has modification time of '2022-10-14T08:02:03Z' while content on disk has modification time of '2022-10-14T11:14:46Z'
  Import took 0.103538 seconds .

========================================================================
Received Import Request.
  Time since last request: 7.453485 seconds.
  path: Assets/Resources/Prefabs/Slot.prefab
  artifactKey: Guid(06a12056aef3f458ea896a90f397357c) Importer(815301076,1909f56bfc062723c751e8b465ee728b)
Start importing Assets/Resources/Prefabs/Slot.prefab using Guid(06a12056aef3f458ea896a90f397357c) Importer(815301076,1909f56bfc062723c751e8b465ee728b) Diagnostics callstack to track who triggered the sub-import:
 #5 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #7 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #8 _dispatch_client_callout
 #9 _dispatch_async_and_wait_invoke
 #10 _dispatch_client_callout
 #11 _dispatch_main_queue_callback_4CF
 #12 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #13 __CFRunLoopRun
 #14 CFRunLoopRunSpecific
 #15 RunCurrentEventLoopInMode
 #16 ReceiveNextEventCommon
 #17 _BlockUntilNextEventMatchingListInModeWithFilter
 #18 _DPSNextEvent
 #19 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #20 -[NSApplication run]
 #21 NSApplicationMain
 #22 EditorMain(int, char const**)
 #23 main
 #24 ???
 #25 ???

Requesting import of Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000), Assets/Resources/Prefabs/Slot.prefab from editor
Resuming Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000) -> 0e506c56a4e51c10762390a6340e8b5c 
Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'unsafeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'safeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'state.state == kUpToDate'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #8 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #9 _dispatch_client_callout
 #10 _dispatch_async_and_wait_invoke
 #11 _dispatch_client_callout
 #12 _dispatch_main_queue_callback_4CF
 #13 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #14 __CFRunLoopRun
 #15 CFRunLoopRunSpecific
 #16 RunCurrentEventLoopInMode
 #17 ReceiveNextEventCommon
 #18 _BlockUntilNextEventMatchingListInModeWithFilter
 #19 _DPSNextEvent
 #20 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #21 -[NSApplication run]
 #22 NSApplicationMain
 #23 EditorMain(int, char const**)
 #24 main
 #25 ???
 #26 ???

Assertion failed on expression: 'state.artifactID == result'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #8 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #9 _dispatch_client_callout
 #10 _dispatch_async_and_wait_invoke
 #11 _dispatch_client_callout
 #12 _dispatch_main_queue_callback_4CF
 #13 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #14 __CFRunLoopRun
 #15 CFRunLoopRunSpecific
 #16 RunCurrentEventLoopInMode
 #17 ReceiveNextEventCommon
 #18 _BlockUntilNextEventMatchingListInModeWithFilter
 #19 _DPSNextEvent
 #20 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #21 -[NSApplication run]
 #22 NSApplicationMain
 #23 EditorMain(int, char const**)
 #24 main
 #25 ???
 #26 ???

Diagnostics callstack to track who triggered the sub-import:
 #5 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #8 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #9 _dispatch_client_callout
 #10 _dispatch_async_and_wait_invoke
 #11 _dispatch_client_callout
 #12 _dispatch_main_queue_callback_4CF
 #13 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #14 __CFRunLoopRun
 #15 CFRunLoopRunSpecific
 #16 RunCurrentEventLoopInMode
 #17 ReceiveNextEventCommon
 #18 _BlockUntilNextEventMatchingListInModeWithFilter
 #19 _DPSNextEvent
 #20 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #21 -[NSApplication run]
 #22 NSApplicationMain
 #23 EditorMain(int, char const**)
 #24 main
 #25 ???
 #26 ???

Requesting import of Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000), Assets/Resources/Prefabs/Slot.prefab from editor
Resuming Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000) -> 0e506c56a4e51c10762390a6340e8b5c 
Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'unsafeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'safeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'state.state == kUpToDate'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #6 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #9 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #10 _dispatch_client_callout
 #11 _dispatch_async_and_wait_invoke
 #12 _dispatch_client_callout
 #13 _dispatch_main_queue_callback_4CF
 #14 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #15 __CFRunLoopRun
 #16 CFRunLoopRunSpecific
 #17 RunCurrentEventLoopInMode
 #18 ReceiveNextEventCommon
 #19 _BlockUntilNextEventMatchingListInModeWithFilter
 #20 _DPSNextEvent
 #21 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #22 -[NSApplication run]
 #23 NSApplicationMain
 #24 EditorMain(int, char const**)
 #25 main
 #26 ???
 #27 ???

Assertion failed on expression: 'state.artifactID == result'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #6 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #9 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #10 _dispatch_client_callout
 #11 _dispatch_async_and_wait_invoke
 #12 _dispatch_client_callout
 #13 _dispatch_main_queue_callback_4CF
 #14 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #15 __CFRunLoopRun
 #16 CFRunLoopRunSpecific
 #17 RunCurrentEventLoopInMode
 #18 ReceiveNextEventCommon
 #19 _BlockUntilNextEventMatchingListInModeWithFilter
 #20 _DPSNextEvent
 #21 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #22 -[NSApplication run]
 #23 NSApplicationMain
 #24 EditorMain(int, char const**)
 #25 main
 #26 ???
 #27 ???

 -> (artifact id: '00000000000000000000000000000000') in 0.097857 seconds  code(4) message(Build asset version error: assets/resources/prefabs/slot.prefab in SourceAssetDB has modification time of '2022-10-14T08:02:03Z' while content on disk has modification time of '2022-10-14T11:14:46Z')
  ERROR: Build asset version error: assets/resources/prefabs/slot.prefab in SourceAssetDB has modification time of '2022-10-14T08:02:03Z' while content on disk has modification time of '2022-10-14T11:14:46Z'
  Import took 0.100587 seconds .

========================================================================
Received Prepare
Registering precompiled user dll's ...
Registered in 0.003999 seconds.
Begin MonoManager ReloadAssembly
Native extension for OSXStandalone target not found
Refreshing native plugins compatible for Editor in 0.54 ms, found 3 plugins.
Preloading 0 native plugins for Editor in 0.00 ms.
2022-10-14 12:52:06.178 Unity[39410:508699] NSEventModifierFlagFunction specified to -setKeyEquivalentModifierMask: for item <NSMenuItem: 0x600003c31960 Font Asset, ke='Command-F12'>, but is only supported for system-provided menu items; will not be used
Mono: successfully reloaded assembly
- Completed reload, in  2.352 seconds
Domain Reload Profiling:
	ReloadAssembly (2353ms)
		BeginReloadAssembly (233ms)
			ExecutionOrderSort (0ms)
			DisableScriptedObjects (41ms)
			BackupInstance (0ms)
			ReleaseScriptingObjects (0ms)
			CreateAndSetChildDomain (73ms)
		EndReloadAssembly (2022ms)
			LoadAssemblies (217ms)
			RebuildTransferFunctionScriptingTraits (0ms)
			SetupTypeCache (360ms)
			ReleaseScriptCaches (1ms)
			RebuildScriptCaches (53ms)
			SetupLoadedEditorAssemblies (1098ms)
				LogAssemblyErrors (0ms)
				InitializePlatformSupportModulesInManaged (14ms)
				SetLoadedEditorAssemblies (2ms)
				RefreshPlugins (1ms)
				BeforeProcessingInitializeOnLoad (267ms)
				ProcessInitializeOnLoadAttributes (773ms)
				ProcessInitializeOnLoadMethodAttributes (40ms)
				AfterProcessingInitializeOnLoad (1ms)
				EditorAssembliesLoaded (0ms)
			ExecutionOrderSort2 (0ms)
			AwakeInstancesAfterBackupRestoration (39ms)
Platform modules already initialized, skipping
Switching build target platform(2) subTarget(0) extendedPlatform(0) -> platform(13) subTarget(537395200) extendedPlatform(0)
Refreshing native plugins compatible for Editor in 0.53 ms, found 3 plugins.
Preloading 0 native plugins for Editor in 0.00 ms.
Unloading 2300 Unused Serialized files (Serialized files now loaded: 0)
System memory in use before: 213.6 MB.
System memory in use after: 213.8 MB.

Unloading 30 unused Assets to reduce memory usage. Loaded Objects now: 2813.
Total: 2.246917 ms (FindLiveObjects: 0.148667 ms CreateObjectMapping: 0.046333 ms MarkObjects: 2.031792 ms  DeleteObjects: 0.019292 ms)

AssetImportParameters requested are different than current active one (requested -> active):
  custom:video-decoder-ogg-theora: a1e56fd34408186e4bbccfd4996cb3dc -> 
  custom:container-muxer-webm: aa71ff27fc2769a1b78a27578f13a17b -> 
  custom:container-demuxer-webm: 4f35f7cbe854078d1ac9338744f61a02 -> 
  custom:container-demuxer-ogg: 62fdf1f143b41e24485cea50d1cbac27 -> 
  custom:video-encoder-webm-vp8: eb34c28f22e8b96e1ab97ce403110664 -> 
  custom:framework-osx-AVFoundation: e770b220cccbd017edd2c1fefb359320 -> 
  custom:video-decoder-webm-vp8: 9c59270c3fd7afecdb556c50c9e8de78 -> 
  custom:graphics/normal-map-encoding: 01000000000000000000000000000000 -> 02000000000000000000000000000000
  custom:audio-decoder-ogg-vorbis: bf7c407c2cedff20999df2af8eb42d56 -> 
  custom:audio-encoder-webm-vorbis: bf7c407c2cedff20999df2af8eb42d56 -> 
========================================================================
Received Prepare
Registering precompiled user dll's ...
Registered in 0.001449 seconds.
Begin MonoManager ReloadAssembly
Native extension for OSXStandalone target not found
Refreshing native plugins compatible for Editor in 0.52 ms, found 3 plugins.
Preloading 0 native plugins for Editor in 0.00 ms.
2022-10-14 12:52:11.408 Unity[39410:508699] NSEventModifierFlagFunction specified to -setKeyEquivalentModifierMask: for item <NSMenuItem: 0x600003c334f0 Font Asset, ke='Command-F12'>, but is only supported for system-provided menu items; will not be used
Mono: successfully reloaded assembly
- Completed reload, in  2.332 seconds
Domain Reload Profiling:
	ReloadAssembly (2332ms)
		BeginReloadAssembly (228ms)
			ExecutionOrderSort (0ms)
			DisableScriptedObjects (38ms)
			BackupInstance (0ms)
			ReleaseScriptingObjects (0ms)
			CreateAndSetChildDomain (65ms)
		EndReloadAssembly (2008ms)
			LoadAssemblies (208ms)
			RebuildTransferFunctionScriptingTraits (0ms)
			SetupTypeCache (351ms)
			ReleaseScriptCaches (1ms)
			RebuildScriptCaches (55ms)
			SetupLoadedEditorAssemblies (1114ms)
				LogAssemblyErrors (0ms)
				InitializePlatformSupportModulesInManaged (14ms)
				SetLoadedEditorAssemblies (2ms)
				RefreshPlugins (1ms)
				BeforeProcessingInitializeOnLoad (265ms)
				ProcessInitializeOnLoadAttributes (791ms)
				ProcessInitializeOnLoadMethodAttributes (40ms)
				AfterProcessingInitializeOnLoad (1ms)
				EditorAssembliesLoaded (0ms)
			ExecutionOrderSort2 (0ms)
			AwakeInstancesAfterBackupRestoration (41ms)
Platform modules already initialized, skipping
Switching build target platform(2) subTarget(0) extendedPlatform(0) -> platform(13) subTarget(537395200) extendedPlatform(0)
Refreshing native plugins compatible for Editor in 0.55 ms, found 3 plugins.
Preloading 0 native plugins for Editor in 0.00 ms.
Unloading 2300 Unused Serialized files (Serialized files now loaded: 0)
System memory in use before: 213.8 MB.
System memory in use after: 214.1 MB.

Unloading 30 unused Assets to reduce memory usage. Loaded Objects now: 2815.
Total: 2.191083 ms (FindLiveObjects: 0.141000 ms CreateObjectMapping: 0.043583 ms MarkObjects: 1.990042 ms  DeleteObjects: 0.015792 ms)

AssetImportParameters requested are different than current active one (requested -> active):
  custom:video-decoder-ogg-theora: a1e56fd34408186e4bbccfd4996cb3dc -> 
  custom:container-muxer-webm: aa71ff27fc2769a1b78a27578f13a17b -> 
  custom:container-demuxer-webm: 4f35f7cbe854078d1ac9338744f61a02 -> 
  custom:container-demuxer-ogg: 62fdf1f143b41e24485cea50d1cbac27 -> 
  custom:video-encoder-webm-vp8: eb34c28f22e8b96e1ab97ce403110664 -> 
  custom:framework-osx-AVFoundation: e770b220cccbd017edd2c1fefb359320 -> 
  custom:video-decoder-webm-vp8: 9c59270c3fd7afecdb556c50c9e8de78 -> 
  custom:graphics/normal-map-encoding: 01000000000000000000000000000000 -> 02000000000000000000000000000000
  custom:audio-decoder-ogg-vorbis: bf7c407c2cedff20999df2af8eb42d56 -> 
  custom:audio-encoder-webm-vorbis: bf7c407c2cedff20999df2af8eb42d56 -> 
========================================================================
Received Import Request.
  Time since last request: 37.985375 seconds.
  path: Assets/Resources/Prefabs/Slot.prefab
  artifactKey: Guid(06a12056aef3f458ea896a90f397357c) Importer(815301076,1909f56bfc062723c751e8b465ee728b)
Start importing Assets/Resources/Prefabs/Slot.prefab using Guid(06a12056aef3f458ea896a90f397357c) Importer(815301076,1909f56bfc062723c751e8b465ee728b) Diagnostics callstack to track who triggered the sub-import:
 #5 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #7 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #8 _dispatch_client_callout
 #9 _dispatch_async_and_wait_invoke
 #10 _dispatch_client_callout
 #11 _dispatch_main_queue_callback_4CF
 #12 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #13 __CFRunLoopRun
 #14 CFRunLoopRunSpecific
 #15 RunCurrentEventLoopInMode
 #16 ReceiveNextEventCommon
 #17 _BlockUntilNextEventMatchingListInModeWithFilter
 #18 _DPSNextEvent
 #19 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #20 -[NSApplication run]
 #21 NSApplicationMain
 #22 EditorMain(int, char const**)
 #23 main
 #24 ???
 #25 ???

Requesting import of Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000), Assets/Resources/Prefabs/Slot.prefab from editor
Resuming Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000) -> 0e506c56a4e51c10762390a6340e8b5c 
Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'unsafeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'safeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'state.state == kUpToDate'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #8 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #9 _dispatch_client_callout
 #10 _dispatch_async_and_wait_invoke
 #11 _dispatch_client_callout
 #12 _dispatch_main_queue_callback_4CF
 #13 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #14 __CFRunLoopRun
 #15 CFRunLoopRunSpecific
 #16 RunCurrentEventLoopInMode
 #17 ReceiveNextEventCommon
 #18 _BlockUntilNextEventMatchingListInModeWithFilter
 #19 _DPSNextEvent
 #20 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #21 -[NSApplication run]
 #22 NSApplicationMain
 #23 EditorMain(int, char const**)
 #24 main
 #25 ???
 #26 ???

Assertion failed on expression: 'state.artifactID == result'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #8 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #9 _dispatch_client_callout
 #10 _dispatch_async_and_wait_invoke
 #11 _dispatch_client_callout
 #12 _dispatch_main_queue_callback_4CF
 #13 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #14 __CFRunLoopRun
 #15 CFRunLoopRunSpecific
 #16 RunCurrentEventLoopInMode
 #17 ReceiveNextEventCommon
 #18 _BlockUntilNextEventMatchingListInModeWithFilter
 #19 _DPSNextEvent
 #20 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #21 -[NSApplication run]
 #22 NSApplicationMain
 #23 EditorMain(int, char const**)
 #24 main
 #25 ???
 #26 ???

Diagnostics callstack to track who triggered the sub-import:
 #5 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #8 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #9 _dispatch_client_callout
 #10 _dispatch_async_and_wait_invoke
 #11 _dispatch_client_callout
 #12 _dispatch_main_queue_callback_4CF
 #13 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #14 __CFRunLoopRun
 #15 CFRunLoopRunSpecific
 #16 RunCurrentEventLoopInMode
 #17 ReceiveNextEventCommon
 #18 _BlockUntilNextEventMatchingListInModeWithFilter
 #19 _DPSNextEvent
 #20 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #21 -[NSApplication run]
 #22 NSApplicationMain
 #23 EditorMain(int, char const**)
 #24 main
 #25 ???
 #26 ???

Requesting import of Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000), Assets/Resources/Prefabs/Slot.prefab from editor
Resuming Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000) -> 0e506c56a4e51c10762390a6340e8b5c 
Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'unsafeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'safeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'state.state == kUpToDate'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #6 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #9 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #10 _dispatch_client_callout
 #11 _dispatch_async_and_wait_invoke
 #12 _dispatch_client_callout
 #13 _dispatch_main_queue_callback_4CF
 #14 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #15 __CFRunLoopRun
 #16 CFRunLoopRunSpecific
 #17 RunCurrentEventLoopInMode
 #18 ReceiveNextEventCommon
 #19 _BlockUntilNextEventMatchingListInModeWithFilter
 #20 _DPSNextEvent
 #21 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #22 -[NSApplication run]
 #23 NSApplicationMain
 #24 EditorMain(int, char const**)
 #25 main
 #26 ???
 #27 ???

Assertion failed on expression: 'state.artifactID == result'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #6 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #9 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #10 _dispatch_client_callout
 #11 _dispatch_async_and_wait_invoke
 #12 _dispatch_client_callout
 #13 _dispatch_main_queue_callback_4CF
 #14 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #15 __CFRunLoopRun
 #16 CFRunLoopRunSpecific
 #17 RunCurrentEventLoopInMode
 #18 ReceiveNextEventCommon
 #19 _BlockUntilNextEventMatchingListInModeWithFilter
 #20 _DPSNextEvent
 #21 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #22 -[NSApplication run]
 #23 NSApplicationMain
 #24 EditorMain(int, char const**)
 #25 main
 #26 ???
 #27 ???

 -> (artifact id: '00000000000000000000000000000000') in 0.097381 seconds  code(4) message(Build asset version error: assets/resources/prefabs/slot.prefab in SourceAssetDB has modification time of '2022-10-14T08:02:03Z' while content on disk has modification time of '2022-10-14T11:14:46Z')
  ERROR: Build asset version error: assets/resources/prefabs/slot.prefab in SourceAssetDB has modification time of '2022-10-14T08:02:03Z' while content on disk has modification time of '2022-10-14T11:14:46Z'
  Import took 0.099821 seconds .

========================================================================
Received Import Request.
  Time since last request: 8.138182 seconds.
  path: Assets/Resources/Prefabs/Slot.prefab
  artifactKey: Guid(06a12056aef3f458ea896a90f397357c) Importer(815301076,1909f56bfc062723c751e8b465ee728b)
Start importing Assets/Resources/Prefabs/Slot.prefab using Guid(06a12056aef3f458ea896a90f397357c) Importer(815301076,1909f56bfc062723c751e8b465ee728b) Diagnostics callstack to track who triggered the sub-import:
 #5 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #7 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #8 _dispatch_client_callout
 #9 _dispatch_async_and_wait_invoke
 #10 _dispatch_client_callout
 #11 _dispatch_main_queue_callback_4CF
 #12 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #13 __CFRunLoopRun
 #14 CFRunLoopRunSpecific
 #15 RunCurrentEventLoopInMode
 #16 ReceiveNextEventCommon
 #17 _BlockUntilNextEventMatchingListInModeWithFilter
 #18 _DPSNextEvent
 #19 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #20 -[NSApplication run]
 #21 NSApplicationMain
 #22 EditorMain(int, char const**)
 #23 main
 #24 ???
 #25 ???

Requesting import of Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000), Assets/Resources/Prefabs/Slot.prefab from editor
Resuming Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000) -> 0e506c56a4e51c10762390a6340e8b5c 
Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'unsafeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'safeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'state.state == kUpToDate'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #8 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #9 _dispatch_client_callout
 #10 _dispatch_async_and_wait_invoke
 #11 _dispatch_client_callout
 #12 _dispatch_main_queue_callback_4CF
 #13 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #14 __CFRunLoopRun
 #15 CFRunLoopRunSpecific
 #16 RunCurrentEventLoopInMode
 #17 ReceiveNextEventCommon
 #18 _BlockUntilNextEventMatchingListInModeWithFilter
 #19 _DPSNextEvent
 #20 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #21 -[NSApplication run]
 #22 NSApplicationMain
 #23 EditorMain(int, char const**)
 #24 main
 #25 ???
 #26 ???

Assertion failed on expression: 'state.artifactID == result'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #8 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #9 _dispatch_client_callout
 #10 _dispatch_async_and_wait_invoke
 #11 _dispatch_client_callout
 #12 _dispatch_main_queue_callback_4CF
 #13 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #14 __CFRunLoopRun
 #15 CFRunLoopRunSpecific
 #16 RunCurrentEventLoopInMode
 #17 ReceiveNextEventCommon
 #18 _BlockUntilNextEventMatchingListInModeWithFilter
 #19 _DPSNextEvent
 #20 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #21 -[NSApplication run]
 #22 NSApplicationMain
 #23 EditorMain(int, char const**)
 #24 main
 #25 ???
 #26 ???

Diagnostics callstack to track who triggered the sub-import:
 #5 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #8 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #9 _dispatch_client_callout
 #10 _dispatch_async_and_wait_invoke
 #11 _dispatch_client_callout
 #12 _dispatch_main_queue_callback_4CF
 #13 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #14 __CFRunLoopRun
 #15 CFRunLoopRunSpecific
 #16 RunCurrentEventLoopInMode
 #17 ReceiveNextEventCommon
 #18 _BlockUntilNextEventMatchingListInModeWithFilter
 #19 _DPSNextEvent
 #20 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #21 -[NSApplication run]
 #22 NSApplicationMain
 #23 EditorMain(int, char const**)
 #24 main
 #25 ???
 #26 ???

Requesting import of Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000), Assets/Resources/Prefabs/Slot.prefab from editor
Resuming Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000) -> 0e506c56a4e51c10762390a6340e8b5c 
Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'unsafeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'safeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'state.state == kUpToDate'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #6 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #9 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #10 _dispatch_client_callout
 #11 _dispatch_async_and_wait_invoke
 #12 _dispatch_client_callout
 #13 _dispatch_main_queue_callback_4CF
 #14 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #15 __CFRunLoopRun
 #16 CFRunLoopRunSpecific
 #17 RunCurrentEventLoopInMode
 #18 ReceiveNextEventCommon
 #19 _BlockUntilNextEventMatchingListInModeWithFilter
 #20 _DPSNextEvent
 #21 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #22 -[NSApplication run]
 #23 NSApplicationMain
 #24 EditorMain(int, char const**)
 #25 main
 #26 ???
 #27 ???

Assertion failed on expression: 'state.artifactID == result'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #6 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #9 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #10 _dispatch_client_callout
 #11 _dispatch_async_and_wait_invoke
 #12 _dispatch_client_callout
 #13 _dispatch_main_queue_callback_4CF
 #14 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #15 __CFRunLoopRun
 #16 CFRunLoopRunSpecific
 #17 RunCurrentEventLoopInMode
 #18 ReceiveNextEventCommon
 #19 _BlockUntilNextEventMatchingListInModeWithFilter
 #20 _DPSNextEvent
 #21 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #22 -[NSApplication run]
 #23 NSApplicationMain
 #24 EditorMain(int, char const**)
 #25 main
 #26 ???
 #27 ???

 -> (artifact id: '00000000000000000000000000000000') in 0.097854 seconds  code(4) message(Build asset version error: assets/resources/prefabs/slot.prefab in SourceAssetDB has modification time of '2022-10-14T08:02:03Z' while content on disk has modification time of '2022-10-14T11:14:46Z')
  ERROR: Build asset version error: assets/resources/prefabs/slot.prefab in SourceAssetDB has modification time of '2022-10-14T08:02:03Z' while content on disk has modification time of '2022-10-14T11:14:46Z'
  Import took 0.100585 seconds .

========================================================================
Received Prepare
Registering precompiled user dll's ...
Registered in 0.004415 seconds.
Begin MonoManager ReloadAssembly
Native extension for OSXStandalone target not found
Refreshing native plugins compatible for Editor in 0.55 ms, found 3 plugins.
Preloading 0 native plugins for Editor in 0.00 ms.
2022-10-14 12:53:33.813 Unity[39410:508699] NSEventModifierFlagFunction specified to -setKeyEquivalentModifierMask: for item <NSMenuItem: 0x600003c32920 Font Asset, ke='Command-F12'>, but is only supported for system-provided menu items; will not be used
Mono: successfully reloaded assembly
- Completed reload, in  2.367 seconds
Domain Reload Profiling:
	ReloadAssembly (2368ms)
		BeginReloadAssembly (248ms)
			ExecutionOrderSort (0ms)
			DisableScriptedObjects (47ms)
			BackupInstance (0ms)
			ReleaseScriptingObjects (0ms)
			CreateAndSetChildDomain (71ms)
		EndReloadAssembly (2021ms)
			LoadAssemblies (218ms)
			RebuildTransferFunctionScriptingTraits (0ms)
			SetupTypeCache (359ms)
			ReleaseScriptCaches (1ms)
			RebuildScriptCaches (56ms)
			SetupLoadedEditorAssemblies (1097ms)
				LogAssemblyErrors (0ms)
				InitializePlatformSupportModulesInManaged (15ms)
				SetLoadedEditorAssemblies (2ms)
				RefreshPlugins (1ms)
				BeforeProcessingInitializeOnLoad (259ms)
				ProcessInitializeOnLoadAttributes (779ms)
				ProcessInitializeOnLoadMethodAttributes (40ms)
				AfterProcessingInitializeOnLoad (1ms)
				EditorAssembliesLoaded (0ms)
			ExecutionOrderSort2 (0ms)
			AwakeInstancesAfterBackupRestoration (39ms)
Platform modules already initialized, skipping
Switching build target platform(2) subTarget(0) extendedPlatform(0) -> platform(13) subTarget(537395200) extendedPlatform(0)
Refreshing native plugins compatible for Editor in 0.50 ms, found 3 plugins.
Preloading 0 native plugins for Editor in 0.00 ms.
Unloading 2300 Unused Serialized files (Serialized files now loaded: 0)
System memory in use before: 214.1 MB.
System memory in use after: 214.3 MB.

Unloading 30 unused Assets to reduce memory usage. Loaded Objects now: 2817.
Total: 2.265333 ms (FindLiveObjects: 0.134208 ms CreateObjectMapping: 0.046333 ms MarkObjects: 2.066750 ms  DeleteObjects: 0.017125 ms)

AssetImportParameters requested are different than current active one (requested -> active):
  custom:video-decoder-ogg-theora: a1e56fd34408186e4bbccfd4996cb3dc -> 
  custom:container-muxer-webm: aa71ff27fc2769a1b78a27578f13a17b -> 
  custom:container-demuxer-webm: 4f35f7cbe854078d1ac9338744f61a02 -> 
  custom:container-demuxer-ogg: 62fdf1f143b41e24485cea50d1cbac27 -> 
  custom:video-encoder-webm-vp8: eb34c28f22e8b96e1ab97ce403110664 -> 
  custom:framework-osx-AVFoundation: e770b220cccbd017edd2c1fefb359320 -> 
  custom:video-decoder-webm-vp8: 9c59270c3fd7afecdb556c50c9e8de78 -> 
  custom:graphics/normal-map-encoding: 01000000000000000000000000000000 -> 02000000000000000000000000000000
  custom:audio-decoder-ogg-vorbis: bf7c407c2cedff20999df2af8eb42d56 -> 
  custom:audio-encoder-webm-vorbis: bf7c407c2cedff20999df2af8eb42d56 -> 
========================================================================
Received Import Request.
  Time since last request: 74.149592 seconds.
  path: Assets/Resources/Prefabs/Slot.prefab
  artifactKey: Guid(06a12056aef3f458ea896a90f397357c) Importer(815301076,1909f56bfc062723c751e8b465ee728b)
Start importing Assets/Resources/Prefabs/Slot.prefab using Guid(06a12056aef3f458ea896a90f397357c) Importer(815301076,1909f56bfc062723c751e8b465ee728b) Diagnostics callstack to track who triggered the sub-import:
 #5 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #7 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #8 _dispatch_client_callout
 #9 _dispatch_async_and_wait_invoke
 #10 _dispatch_client_callout
 #11 _dispatch_main_queue_callback_4CF
 #12 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #13 __CFRunLoopRun
 #14 CFRunLoopRunSpecific
 #15 RunCurrentEventLoopInMode
 #16 ReceiveNextEventCommon
 #17 _BlockUntilNextEventMatchingListInModeWithFilter
 #18 _DPSNextEvent
 #19 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #20 -[NSApplication run]
 #21 NSApplicationMain
 #22 EditorMain(int, char const**)
 #23 main
 #24 ???
 #25 ???

Requesting import of Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000), Assets/Resources/Prefabs/Slot.prefab from editor
Resuming Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000) -> 0e506c56a4e51c10762390a6340e8b5c 
Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'unsafeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'safeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'state.state == kUpToDate'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #8 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #9 _dispatch_client_callout
 #10 _dispatch_async_and_wait_invoke
 #11 _dispatch_client_callout
 #12 _dispatch_main_queue_callback_4CF
 #13 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #14 __CFRunLoopRun
 #15 CFRunLoopRunSpecific
 #16 RunCurrentEventLoopInMode
 #17 ReceiveNextEventCommon
 #18 _BlockUntilNextEventMatchingListInModeWithFilter
 #19 _DPSNextEvent
 #20 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #21 -[NSApplication run]
 #22 NSApplicationMain
 #23 EditorMain(int, char const**)
 #24 main
 #25 ???
 #26 ???

Assertion failed on expression: 'state.artifactID == result'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #8 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #9 _dispatch_client_callout
 #10 _dispatch_async_and_wait_invoke
 #11 _dispatch_client_callout
 #12 _dispatch_main_queue_callback_4CF
 #13 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #14 __CFRunLoopRun
 #15 CFRunLoopRunSpecific
 #16 RunCurrentEventLoopInMode
 #17 ReceiveNextEventCommon
 #18 _BlockUntilNextEventMatchingListInModeWithFilter
 #19 _DPSNextEvent
 #20 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #21 -[NSApplication run]
 #22 NSApplicationMain
 #23 EditorMain(int, char const**)
 #24 main
 #25 ???
 #26 ???

Diagnostics callstack to track who triggered the sub-import:
 #5 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #8 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #9 _dispatch_client_callout
 #10 _dispatch_async_and_wait_invoke
 #11 _dispatch_client_callout
 #12 _dispatch_main_queue_callback_4CF
 #13 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #14 __CFRunLoopRun
 #15 CFRunLoopRunSpecific
 #16 RunCurrentEventLoopInMode
 #17 ReceiveNextEventCommon
 #18 _BlockUntilNextEventMatchingListInModeWithFilter
 #19 _DPSNextEvent
 #20 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #21 -[NSApplication run]
 #22 NSApplicationMain
 #23 EditorMain(int, char const**)
 #24 main
 #25 ???
 #26 ???

Requesting import of Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000), Assets/Resources/Prefabs/Slot.prefab from editor
Resuming Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000) -> 0e506c56a4e51c10762390a6340e8b5c 
Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'unsafeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'safeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'state.state == kUpToDate'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #6 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #9 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #10 _dispatch_client_callout
 #11 _dispatch_async_and_wait_invoke
 #12 _dispatch_client_callout
 #13 _dispatch_main_queue_callback_4CF
 #14 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #15 __CFRunLoopRun
 #16 CFRunLoopRunSpecific
 #17 RunCurrentEventLoopInMode
 #18 ReceiveNextEventCommon
 #19 _BlockUntilNextEventMatchingListInModeWithFilter
 #20 _DPSNextEvent
 #21 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #22 -[NSApplication run]
 #23 NSApplicationMain
 #24 EditorMain(int, char const**)
 #25 main
 #26 ???
 #27 ???

Assertion failed on expression: 'state.artifactID == result'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #6 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #9 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #10 _dispatch_client_callout
 #11 _dispatch_async_and_wait_invoke
 #12 _dispatch_client_callout
 #13 _dispatch_main_queue_callback_4CF
 #14 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #15 __CFRunLoopRun
 #16 CFRunLoopRunSpecific
 #17 RunCurrentEventLoopInMode
 #18 ReceiveNextEventCommon
 #19 _BlockUntilNextEventMatchingListInModeWithFilter
 #20 _DPSNextEvent
 #21 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #22 -[NSApplication run]
 #23 NSApplicationMain
 #24 EditorMain(int, char const**)
 #25 main
 #26 ???
 #27 ???

 -> (artifact id: '00000000000000000000000000000000') in 0.099812 seconds  code(4) message(Build asset version error: assets/resources/prefabs/slot.prefab in SourceAssetDB has modification time of '2022-10-14T08:02:03Z' while content on disk has modification time of '2022-10-14T11:14:46Z')
  ERROR: Build asset version error: assets/resources/prefabs/slot.prefab in SourceAssetDB has modification time of '2022-10-14T08:02:03Z' while content on disk has modification time of '2022-10-14T11:14:46Z'
  Import took 0.102325 seconds .

========================================================================
Received Prepare
Registering precompiled user dll's ...
Registered in 0.001442 seconds.
Begin MonoManager ReloadAssembly
Native extension for OSXStandalone target not found
Refreshing native plugins compatible for Editor in 0.52 ms, found 3 plugins.
Preloading 0 native plugins for Editor in 0.00 ms.
2022-10-14 12:53:39.004 Unity[39410:508699] NSEventModifierFlagFunction specified to -setKeyEquivalentModifierMask: for item <NSMenuItem: 0x600003f665a0 Font Asset, ke='Command-F12'>, but is only supported for system-provided menu items; will not be used
Mono: successfully reloaded assembly
- Completed reload, in  2.349 seconds
Domain Reload Profiling:
	ReloadAssembly (2350ms)
		BeginReloadAssembly (205ms)
			ExecutionOrderSort (0ms)
			DisableScriptedObjects (38ms)
			BackupInstance (0ms)
			ReleaseScriptingObjects (0ms)
			CreateAndSetChildDomain (64ms)
		EndReloadAssembly (2051ms)
			LoadAssemblies (183ms)
			RebuildTransferFunctionScriptingTraits (0ms)
			SetupTypeCache (353ms)
			ReleaseScriptCaches (1ms)
			RebuildScriptCaches (53ms)
			SetupLoadedEditorAssemblies (1158ms)
				LogAssemblyErrors (0ms)
				InitializePlatformSupportModulesInManaged (15ms)
				SetLoadedEditorAssemblies (2ms)
				RefreshPlugins (1ms)
				BeforeProcessingInitializeOnLoad (261ms)
				ProcessInitializeOnLoadAttributes (837ms)
				ProcessInitializeOnLoadMethodAttributes (41ms)
				AfterProcessingInitializeOnLoad (1ms)
				EditorAssembliesLoaded (0ms)
			ExecutionOrderSort2 (0ms)
			AwakeInstancesAfterBackupRestoration (44ms)
Platform modules already initialized, skipping
Switching build target platform(2) subTarget(0) extendedPlatform(0) -> platform(13) subTarget(537395200) extendedPlatform(0)
Refreshing native plugins compatible for Editor in 0.55 ms, found 3 plugins.
Preloading 0 native plugins for Editor in 0.00 ms.
Unloading 2300 Unused Serialized files (Serialized files now loaded: 0)
System memory in use before: 214.3 MB.
System memory in use after: 214.5 MB.

Unloading 30 unused Assets to reduce memory usage. Loaded Objects now: 2819.
Total: 2.263750 ms (FindLiveObjects: 0.149166 ms CreateObjectMapping: 0.047417 ms MarkObjects: 2.049958 ms  DeleteObjects: 0.016250 ms)

AssetImportParameters requested are different than current active one (requested -> active):
  custom:video-decoder-ogg-theora: a1e56fd34408186e4bbccfd4996cb3dc -> 
  custom:container-muxer-webm: aa71ff27fc2769a1b78a27578f13a17b -> 
  custom:container-demuxer-webm: 4f35f7cbe854078d1ac9338744f61a02 -> 
  custom:container-demuxer-ogg: 62fdf1f143b41e24485cea50d1cbac27 -> 
  custom:video-encoder-webm-vp8: eb34c28f22e8b96e1ab97ce403110664 -> 
  custom:framework-osx-AVFoundation: e770b220cccbd017edd2c1fefb359320 -> 
  custom:video-decoder-webm-vp8: 9c59270c3fd7afecdb556c50c9e8de78 -> 
  custom:graphics/normal-map-encoding: 01000000000000000000000000000000 -> 02000000000000000000000000000000
  custom:audio-decoder-ogg-vorbis: bf7c407c2cedff20999df2af8eb42d56 -> 
  custom:audio-encoder-webm-vorbis: bf7c407c2cedff20999df2af8eb42d56 -> 
========================================================================
Received Import Request.
  Time since last request: 5.061898 seconds.
  path: Assets/Resources/Prefabs/Slot.prefab
  artifactKey: Guid(06a12056aef3f458ea896a90f397357c) Importer(815301076,1909f56bfc062723c751e8b465ee728b)
Start importing Assets/Resources/Prefabs/Slot.prefab using Guid(06a12056aef3f458ea896a90f397357c) Importer(815301076,1909f56bfc062723c751e8b465ee728b) Diagnostics callstack to track who triggered the sub-import:
 #5 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #7 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #8 _dispatch_client_callout
 #9 _dispatch_async_and_wait_invoke
 #10 _dispatch_client_callout
 #11 _dispatch_main_queue_callback_4CF
 #12 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #13 __CFRunLoopRun
 #14 CFRunLoopRunSpecific
 #15 RunCurrentEventLoopInMode
 #16 ReceiveNextEventCommon
 #17 _BlockUntilNextEventMatchingListInModeWithFilter
 #18 _DPSNextEvent
 #19 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #20 -[NSApplication run]
 #21 NSApplicationMain
 #22 EditorMain(int, char const**)
 #23 main
 #24 ???
 #25 ???

Requesting import of Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000), Assets/Resources/Prefabs/Slot.prefab from editor
Resuming Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000) -> 0e506c56a4e51c10762390a6340e8b5c 
Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'unsafeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'safeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'state.state == kUpToDate'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #8 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #9 _dispatch_client_callout
 #10 _dispatch_async_and_wait_invoke
 #11 _dispatch_client_callout
 #12 _dispatch_main_queue_callback_4CF
 #13 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #14 __CFRunLoopRun
 #15 CFRunLoopRunSpecific
 #16 RunCurrentEventLoopInMode
 #17 ReceiveNextEventCommon
 #18 _BlockUntilNextEventMatchingListInModeWithFilter
 #19 _DPSNextEvent
 #20 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #21 -[NSApplication run]
 #22 NSApplicationMain
 #23 EditorMain(int, char const**)
 #24 main
 #25 ???
 #26 ???

Assertion failed on expression: 'state.artifactID == result'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #8 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #9 _dispatch_client_callout
 #10 _dispatch_async_and_wait_invoke
 #11 _dispatch_client_callout
 #12 _dispatch_main_queue_callback_4CF
 #13 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #14 __CFRunLoopRun
 #15 CFRunLoopRunSpecific
 #16 RunCurrentEventLoopInMode
 #17 ReceiveNextEventCommon
 #18 _BlockUntilNextEventMatchingListInModeWithFilter
 #19 _DPSNextEvent
 #20 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #21 -[NSApplication run]
 #22 NSApplicationMain
 #23 EditorMain(int, char const**)
 #24 main
 #25 ???
 #26 ???

Diagnostics callstack to track who triggered the sub-import:
 #5 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #8 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #9 _dispatch_client_callout
 #10 _dispatch_async_and_wait_invoke
 #11 _dispatch_client_callout
 #12 _dispatch_main_queue_callback_4CF
 #13 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #14 __CFRunLoopRun
 #15 CFRunLoopRunSpecific
 #16 RunCurrentEventLoopInMode
 #17 ReceiveNextEventCommon
 #18 _BlockUntilNextEventMatchingListInModeWithFilter
 #19 _DPSNextEvent
 #20 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #21 -[NSApplication run]
 #22 NSApplicationMain
 #23 EditorMain(int, char const**)
 #24 main
 #25 ???
 #26 ???

Requesting import of Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000), Assets/Resources/Prefabs/Slot.prefab from editor
Resuming Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000) -> 0e506c56a4e51c10762390a6340e8b5c 
Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'unsafeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'safeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'state.state == kUpToDate'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #6 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #9 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #10 _dispatch_client_callout
 #11 _dispatch_async_and_wait_invoke
 #12 _dispatch_client_callout
 #13 _dispatch_main_queue_callback_4CF
 #14 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #15 __CFRunLoopRun
 #16 CFRunLoopRunSpecific
 #17 RunCurrentEventLoopInMode
 #18 ReceiveNextEventCommon
 #19 _BlockUntilNextEventMatchingListInModeWithFilter
 #20 _DPSNextEvent
 #21 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #22 -[NSApplication run]
 #23 NSApplicationMain
 #24 EditorMain(int, char const**)
 #25 main
 #26 ???
 #27 ???

Assertion failed on expression: 'state.artifactID == result'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #6 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #9 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #10 _dispatch_client_callout
 #11 _dispatch_async_and_wait_invoke
 #12 _dispatch_client_callout
 #13 _dispatch_main_queue_callback_4CF
 #14 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #15 __CFRunLoopRun
 #16 CFRunLoopRunSpecific
 #17 RunCurrentEventLoopInMode
 #18 ReceiveNextEventCommon
 #19 _BlockUntilNextEventMatchingListInModeWithFilter
 #20 _DPSNextEvent
 #21 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #22 -[NSApplication run]
 #23 NSApplicationMain
 #24 EditorMain(int, char const**)
 #25 main
 #26 ???
 #27 ???

 -> (artifact id: '00000000000000000000000000000000') in 0.100790 seconds  code(4) message(Build asset version error: assets/resources/prefabs/slot.prefab in SourceAssetDB has modification time of '2022-10-14T08:02:03Z' while content on disk has modification time of '2022-10-14T11:14:46Z')
  ERROR: Build asset version error: assets/resources/prefabs/slot.prefab in SourceAssetDB has modification time of '2022-10-14T08:02:03Z' while content on disk has modification time of '2022-10-14T11:14:46Z'
  Import took 0.103394 seconds .

========================================================================
Received Import Request.
  Time since last request: 7.626642 seconds.
  path: Assets/Resources/Prefabs/Slot.prefab
  artifactKey: Guid(06a12056aef3f458ea896a90f397357c) Importer(815301076,1909f56bfc062723c751e8b465ee728b)
Start importing Assets/Resources/Prefabs/Slot.prefab using Guid(06a12056aef3f458ea896a90f397357c) Importer(815301076,1909f56bfc062723c751e8b465ee728b) Diagnostics callstack to track who triggered the sub-import:
 #5 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #7 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #8 _dispatch_client_callout
 #9 _dispatch_async_and_wait_invoke
 #10 _dispatch_client_callout
 #11 _dispatch_main_queue_callback_4CF
 #12 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #13 __CFRunLoopRun
 #14 CFRunLoopRunSpecific
 #15 RunCurrentEventLoopInMode
 #16 ReceiveNextEventCommon
 #17 _BlockUntilNextEventMatchingListInModeWithFilter
 #18 _DPSNextEvent
 #19 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #20 -[NSApplication run]
 #21 NSApplicationMain
 #22 EditorMain(int, char const**)
 #23 main
 #24 ???
 #25 ???

Requesting import of Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000), Assets/Resources/Prefabs/Slot.prefab from editor
Resuming Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000) -> 0e506c56a4e51c10762390a6340e8b5c 
Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'unsafeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'safeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'state.state == kUpToDate'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #8 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #9 _dispatch_client_callout
 #10 _dispatch_async_and_wait_invoke
 #11 _dispatch_client_callout
 #12 _dispatch_main_queue_callback_4CF
 #13 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #14 __CFRunLoopRun
 #15 CFRunLoopRunSpecific
 #16 RunCurrentEventLoopInMode
 #17 ReceiveNextEventCommon
 #18 _BlockUntilNextEventMatchingListInModeWithFilter
 #19 _DPSNextEvent
 #20 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #21 -[NSApplication run]
 #22 NSApplicationMain
 #23 EditorMain(int, char const**)
 #24 main
 #25 ???
 #26 ???

Assertion failed on expression: 'state.artifactID == result'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #8 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #9 _dispatch_client_callout
 #10 _dispatch_async_and_wait_invoke
 #11 _dispatch_client_callout
 #12 _dispatch_main_queue_callback_4CF
 #13 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #14 __CFRunLoopRun
 #15 CFRunLoopRunSpecific
 #16 RunCurrentEventLoopInMode
 #17 ReceiveNextEventCommon
 #18 _BlockUntilNextEventMatchingListInModeWithFilter
 #19 _DPSNextEvent
 #20 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #21 -[NSApplication run]
 #22 NSApplicationMain
 #23 EditorMain(int, char const**)
 #24 main
 #25 ???
 #26 ???

Diagnostics callstack to track who triggered the sub-import:
 #5 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #8 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #9 _dispatch_client_callout
 #10 _dispatch_async_and_wait_invoke
 #11 _dispatch_client_callout
 #12 _dispatch_main_queue_callback_4CF
 #13 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #14 __CFRunLoopRun
 #15 CFRunLoopRunSpecific
 #16 RunCurrentEventLoopInMode
 #17 ReceiveNextEventCommon
 #18 _BlockUntilNextEventMatchingListInModeWithFilter
 #19 _DPSNextEvent
 #20 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #21 -[NSApplication run]
 #22 NSApplicationMain
 #23 EditorMain(int, char const**)
 #24 main
 #25 ???
 #26 ???

Requesting import of Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000), Assets/Resources/Prefabs/Slot.prefab from editor
Resuming Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000) -> 0e506c56a4e51c10762390a6340e8b5c 
Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'unsafeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'safeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'state.state == kUpToDate'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #6 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #9 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #10 _dispatch_client_callout
 #11 _dispatch_async_and_wait_invoke
 #12 _dispatch_client_callout
 #13 _dispatch_main_queue_callback_4CF
 #14 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #15 __CFRunLoopRun
 #16 CFRunLoopRunSpecific
 #17 RunCurrentEventLoopInMode
 #18 ReceiveNextEventCommon
 #19 _BlockUntilNextEventMatchingListInModeWithFilter
 #20 _DPSNextEvent
 #21 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #22 -[NSApplication run]
 #23 NSApplicationMain
 #24 EditorMain(int, char const**)
 #25 main
 #26 ???
 #27 ???

Assertion failed on expression: 'state.artifactID == result'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #6 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #9 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #10 _dispatch_client_callout
 #11 _dispatch_async_and_wait_invoke
 #12 _dispatch_client_callout
 #13 _dispatch_main_queue_callback_4CF
 #14 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #15 __CFRunLoopRun
 #16 CFRunLoopRunSpecific
 #17 RunCurrentEventLoopInMode
 #18 ReceiveNextEventCommon
 #19 _BlockUntilNextEventMatchingListInModeWithFilter
 #20 _DPSNextEvent
 #21 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #22 -[NSApplication run]
 #23 NSApplicationMain
 #24 EditorMain(int, char const**)
 #25 main
 #26 ???
 #27 ???

 -> (artifact id: '00000000000000000000000000000000') in 0.098223 seconds  code(4) message(Build asset version error: assets/resources/prefabs/slot.prefab in SourceAssetDB has modification time of '2022-10-14T08:02:03Z' while content on disk has modification time of '2022-10-14T11:14:46Z')
  ERROR: Build asset version error: assets/resources/prefabs/slot.prefab in SourceAssetDB has modification time of '2022-10-14T08:02:03Z' while content on disk has modification time of '2022-10-14T11:14:46Z'
  Import took 0.100994 seconds .

========================================================================
Received Prepare
Registering precompiled user dll's ...
Registered in 0.003945 seconds.
Begin MonoManager ReloadAssembly
Native extension for OSXStandalone target not found
Refreshing native plugins compatible for Editor in 0.54 ms, found 3 plugins.
Preloading 0 native plugins for Editor in 0.00 ms.
2022-10-14 12:54:19.102 Unity[39410:508699] NSEventModifierFlagFunction specified to -setKeyEquivalentModifierMask: for item <NSMenuItem: 0x600003c5bc60 Font Asset, ke='Command-F12'>, but is only supported for system-provided menu items; will not be used
Mono: successfully reloaded assembly
- Completed reload, in  2.390 seconds
Domain Reload Profiling:
	ReloadAssembly (2391ms)
		BeginReloadAssembly (241ms)
			ExecutionOrderSort (0ms)
			DisableScriptedObjects (47ms)
			BackupInstance (0ms)
			ReleaseScriptingObjects (0ms)
			CreateAndSetChildDomain (81ms)
		EndReloadAssembly (2049ms)
			LoadAssemblies (209ms)
			RebuildTransferFunctionScriptingTraits (0ms)
			SetupTypeCache (361ms)
			ReleaseScriptCaches (1ms)
			RebuildScriptCaches (54ms)
			SetupLoadedEditorAssemblies (1107ms)
				LogAssemblyErrors (0ms)
				InitializePlatformSupportModulesInManaged (16ms)
				SetLoadedEditorAssemblies (2ms)
				RefreshPlugins (1ms)
				BeforeProcessingInitializeOnLoad (262ms)
				ProcessInitializeOnLoadAttributes (786ms)
				ProcessInitializeOnLoadMethodAttributes (40ms)
				AfterProcessingInitializeOnLoad (1ms)
				EditorAssembliesLoaded (0ms)
			ExecutionOrderSort2 (0ms)
			AwakeInstancesAfterBackupRestoration (38ms)
Platform modules already initialized, skipping
Switching build target platform(2) subTarget(0) extendedPlatform(0) -> platform(13) subTarget(537395200) extendedPlatform(0)
Refreshing native plugins compatible for Editor in 0.49 ms, found 3 plugins.
Preloading 0 native plugins for Editor in 0.00 ms.
Unloading 2300 Unused Serialized files (Serialized files now loaded: 0)
System memory in use before: 214.6 MB.
System memory in use after: 214.8 MB.

Unloading 30 unused Assets to reduce memory usage. Loaded Objects now: 2821.
Total: 2.290000 ms (FindLiveObjects: 0.139458 ms CreateObjectMapping: 0.046709 ms MarkObjects: 2.084583 ms  DeleteObjects: 0.018167 ms)

AssetImportParameters requested are different than current active one (requested -> active):
  custom:video-decoder-ogg-theora: a1e56fd34408186e4bbccfd4996cb3dc -> 
  custom:container-muxer-webm: aa71ff27fc2769a1b78a27578f13a17b -> 
  custom:container-demuxer-webm: 4f35f7cbe854078d1ac9338744f61a02 -> 
  custom:container-demuxer-ogg: 62fdf1f143b41e24485cea50d1cbac27 -> 
  custom:video-encoder-webm-vp8: eb34c28f22e8b96e1ab97ce403110664 -> 
  custom:framework-osx-AVFoundation: e770b220cccbd017edd2c1fefb359320 -> 
  custom:video-decoder-webm-vp8: 9c59270c3fd7afecdb556c50c9e8de78 -> 
  custom:graphics/normal-map-encoding: 01000000000000000000000000000000 -> 02000000000000000000000000000000
  custom:audio-decoder-ogg-vorbis: bf7c407c2cedff20999df2af8eb42d56 -> 
  custom:audio-encoder-webm-vorbis: bf7c407c2cedff20999df2af8eb42d56 -> 
========================================================================
Received Prepare
Registering precompiled user dll's ...
Registered in 0.001447 seconds.
Begin MonoManager ReloadAssembly
Native extension for OSXStandalone target not found
Refreshing native plugins compatible for Editor in 0.54 ms, found 3 plugins.
Preloading 0 native plugins for Editor in 0.00 ms.
2022-10-14 12:54:24.438 Unity[39410:508699] NSEventModifierFlagFunction specified to -setKeyEquivalentModifierMask: for item <NSMenuItem: 0x600003c37db0 Font Asset, ke='Command-F12'>, but is only supported for system-provided menu items; will not be used
Mono: successfully reloaded assembly
- Completed reload, in  2.351 seconds
Domain Reload Profiling:
	ReloadAssembly (2352ms)
		BeginReloadAssembly (206ms)
			ExecutionOrderSort (0ms)
			DisableScriptedObjects (38ms)
			BackupInstance (0ms)
			ReleaseScriptingObjects (0ms)
			CreateAndSetChildDomain (66ms)
		EndReloadAssembly (2053ms)
			LoadAssemblies (181ms)
			RebuildTransferFunctionScriptingTraits (0ms)
			SetupTypeCache (351ms)
			ReleaseScriptCaches (1ms)
			RebuildScriptCaches (53ms)
			SetupLoadedEditorAssemblies (1158ms)
				LogAssemblyErrors (0ms)
				InitializePlatformSupportModulesInManaged (15ms)
				SetLoadedEditorAssemblies (2ms)
				RefreshPlugins (1ms)
				BeforeProcessingInitializeOnLoad (267ms)
				ProcessInitializeOnLoadAttributes (829ms)
				ProcessInitializeOnLoadMethodAttributes (43ms)
				AfterProcessingInitializeOnLoad (1ms)
				EditorAssembliesLoaded (0ms)
			ExecutionOrderSort2 (0ms)
			AwakeInstancesAfterBackupRestoration (41ms)
Platform modules already initialized, skipping
Switching build target platform(2) subTarget(0) extendedPlatform(0) -> platform(13) subTarget(537395200) extendedPlatform(0)
Refreshing native plugins compatible for Editor in 0.48 ms, found 3 plugins.
Preloading 0 native plugins for Editor in 0.00 ms.
Unloading 2300 Unused Serialized files (Serialized files now loaded: 0)
System memory in use before: 214.7 MB.
System memory in use after: 214.9 MB.

Unloading 30 unused Assets to reduce memory usage. Loaded Objects now: 2823.
Total: 2.231708 ms (FindLiveObjects: 0.146291 ms CreateObjectMapping: 0.046500 ms MarkObjects: 2.019500 ms  DeleteObjects: 0.018500 ms)

AssetImportParameters requested are different than current active one (requested -> active):
  custom:video-decoder-ogg-theora: a1e56fd34408186e4bbccfd4996cb3dc -> 
  custom:container-muxer-webm: aa71ff27fc2769a1b78a27578f13a17b -> 
  custom:container-demuxer-webm: 4f35f7cbe854078d1ac9338744f61a02 -> 
  custom:container-demuxer-ogg: 62fdf1f143b41e24485cea50d1cbac27 -> 
  custom:video-encoder-webm-vp8: eb34c28f22e8b96e1ab97ce403110664 -> 
  custom:framework-osx-AVFoundation: e770b220cccbd017edd2c1fefb359320 -> 
  custom:video-decoder-webm-vp8: 9c59270c3fd7afecdb556c50c9e8de78 -> 
  custom:graphics/normal-map-encoding: 01000000000000000000000000000000 -> 02000000000000000000000000000000
  custom:audio-decoder-ogg-vorbis: bf7c407c2cedff20999df2af8eb42d56 -> 
  custom:audio-encoder-webm-vorbis: bf7c407c2cedff20999df2af8eb42d56 -> 
========================================================================
Received Import Request.
  Time since last request: 37.595896 seconds.
  path: Assets/Resources/Prefabs/Slot.prefab
  artifactKey: Guid(06a12056aef3f458ea896a90f397357c) Importer(815301076,1909f56bfc062723c751e8b465ee728b)
Start importing Assets/Resources/Prefabs/Slot.prefab using Guid(06a12056aef3f458ea896a90f397357c) Importer(815301076,1909f56bfc062723c751e8b465ee728b) Diagnostics callstack to track who triggered the sub-import:
 #5 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #7 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #8 _dispatch_client_callout
 #9 _dispatch_async_and_wait_invoke
 #10 _dispatch_client_callout
 #11 _dispatch_main_queue_callback_4CF
 #12 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #13 __CFRunLoopRun
 #14 CFRunLoopRunSpecific
 #15 RunCurrentEventLoopInMode
 #16 ReceiveNextEventCommon
 #17 _BlockUntilNextEventMatchingListInModeWithFilter
 #18 _DPSNextEvent
 #19 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #20 -[NSApplication run]
 #21 NSApplicationMain
 #22 EditorMain(int, char const**)
 #23 main
 #24 ???
 #25 ???

Requesting import of Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000), Assets/Resources/Prefabs/Slot.prefab from editor
Resuming Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000) -> 0e506c56a4e51c10762390a6340e8b5c 
Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'unsafeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'safeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'state.state == kUpToDate'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #8 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #9 _dispatch_client_callout
 #10 _dispatch_async_and_wait_invoke
 #11 _dispatch_client_callout
 #12 _dispatch_main_queue_callback_4CF
 #13 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #14 __CFRunLoopRun
 #15 CFRunLoopRunSpecific
 #16 RunCurrentEventLoopInMode
 #17 ReceiveNextEventCommon
 #18 _BlockUntilNextEventMatchingListInModeWithFilter
 #19 _DPSNextEvent
 #20 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #21 -[NSApplication run]
 #22 NSApplicationMain
 #23 EditorMain(int, char const**)
 #24 main
 #25 ???
 #26 ???

Assertion failed on expression: 'state.artifactID == result'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #8 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #9 _dispatch_client_callout
 #10 _dispatch_async_and_wait_invoke
 #11 _dispatch_client_callout
 #12 _dispatch_main_queue_callback_4CF
 #13 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #14 __CFRunLoopRun
 #15 CFRunLoopRunSpecific
 #16 RunCurrentEventLoopInMode
 #17 ReceiveNextEventCommon
 #18 _BlockUntilNextEventMatchingListInModeWithFilter
 #19 _DPSNextEvent
 #20 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #21 -[NSApplication run]
 #22 NSApplicationMain
 #23 EditorMain(int, char const**)
 #24 main
 #25 ???
 #26 ???

Diagnostics callstack to track who triggered the sub-import:
 #5 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #8 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #9 _dispatch_client_callout
 #10 _dispatch_async_and_wait_invoke
 #11 _dispatch_client_callout
 #12 _dispatch_main_queue_callback_4CF
 #13 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #14 __CFRunLoopRun
 #15 CFRunLoopRunSpecific
 #16 RunCurrentEventLoopInMode
 #17 ReceiveNextEventCommon
 #18 _BlockUntilNextEventMatchingListInModeWithFilter
 #19 _DPSNextEvent
 #20 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #21 -[NSApplication run]
 #22 NSApplicationMain
 #23 EditorMain(int, char const**)
 #24 main
 #25 ???
 #26 ???

Requesting import of Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000), Assets/Resources/Prefabs/Slot.prefab from editor
Resuming Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000) -> 0e506c56a4e51c10762390a6340e8b5c 
Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'unsafeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'safeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'state.state == kUpToDate'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #6 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #9 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #10 _dispatch_client_callout
 #11 _dispatch_async_and_wait_invoke
 #12 _dispatch_client_callout
 #13 _dispatch_main_queue_callback_4CF
 #14 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #15 __CFRunLoopRun
 #16 CFRunLoopRunSpecific
 #17 RunCurrentEventLoopInMode
 #18 ReceiveNextEventCommon
 #19 _BlockUntilNextEventMatchingListInModeWithFilter
 #20 _DPSNextEvent
 #21 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #22 -[NSApplication run]
 #23 NSApplicationMain
 #24 EditorMain(int, char const**)
 #25 main
 #26 ???
 #27 ???

Assertion failed on expression: 'state.artifactID == result'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #6 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #9 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #10 _dispatch_client_callout
 #11 _dispatch_async_and_wait_invoke
 #12 _dispatch_client_callout
 #13 _dispatch_main_queue_callback_4CF
 #14 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #15 __CFRunLoopRun
 #16 CFRunLoopRunSpecific
 #17 RunCurrentEventLoopInMode
 #18 ReceiveNextEventCommon
 #19 _BlockUntilNextEventMatchingListInModeWithFilter
 #20 _DPSNextEvent
 #21 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #22 -[NSApplication run]
 #23 NSApplicationMain
 #24 EditorMain(int, char const**)
 #25 main
 #26 ???
 #27 ???

 -> (artifact id: '00000000000000000000000000000000') in 0.097957 seconds  code(4) message(Build asset version error: assets/resources/prefabs/slot.prefab in SourceAssetDB has modification time of '2022-10-14T08:02:03Z' while content on disk has modification time of '2022-10-14T11:14:46Z')
  ERROR: Build asset version error: assets/resources/prefabs/slot.prefab in SourceAssetDB has modification time of '2022-10-14T08:02:03Z' while content on disk has modification time of '2022-10-14T11:14:46Z'
  Import took 0.100452 seconds .

========================================================================
Received Import Request.
  Time since last request: 5.691332 seconds.
  path: Assets/Resources/Prefabs/Slot.prefab
  artifactKey: Guid(06a12056aef3f458ea896a90f397357c) Importer(815301076,1909f56bfc062723c751e8b465ee728b)
Start importing Assets/Resources/Prefabs/Slot.prefab using Guid(06a12056aef3f458ea896a90f397357c) Importer(815301076,1909f56bfc062723c751e8b465ee728b) Diagnostics callstack to track who triggered the sub-import:
 #5 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #7 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #8 _dispatch_client_callout
 #9 _dispatch_async_and_wait_invoke
 #10 _dispatch_client_callout
 #11 _dispatch_main_queue_callback_4CF
 #12 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #13 __CFRunLoopRun
 #14 CFRunLoopRunSpecific
 #15 RunCurrentEventLoopInMode
 #16 ReceiveNextEventCommon
 #17 _BlockUntilNextEventMatchingListInModeWithFilter
 #18 _DPSNextEvent
 #19 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #20 -[NSApplication run]
 #21 NSApplicationMain
 #22 EditorMain(int, char const**)
 #23 main
 #24 ???
 #25 ???

Requesting import of Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000), Assets/Resources/Prefabs/Slot.prefab from editor
Resuming Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000) -> 0e506c56a4e51c10762390a6340e8b5c 
Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'unsafeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'safeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #10 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #11 _dispatch_client_callout
 #12 _dispatch_async_and_wait_invoke
 #13 _dispatch_client_callout
 #14 _dispatch_main_queue_callback_4CF
 #15 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #16 __CFRunLoopRun
 #17 CFRunLoopRunSpecific
 #18 RunCurrentEventLoopInMode
 #19 ReceiveNextEventCommon
 #20 _BlockUntilNextEventMatchingListInModeWithFilter
 #21 _DPSNextEvent
 #22 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #23 -[NSApplication run]
 #24 NSApplicationMain
 #25 EditorMain(int, char const**)
 #26 main
 #27 ???
 #28 ???

Assertion failed on expression: 'state.state == kUpToDate'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #8 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #9 _dispatch_client_callout
 #10 _dispatch_async_and_wait_invoke
 #11 _dispatch_client_callout
 #12 _dispatch_main_queue_callback_4CF
 #13 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #14 __CFRunLoopRun
 #15 CFRunLoopRunSpecific
 #16 RunCurrentEventLoopInMode
 #17 ReceiveNextEventCommon
 #18 _BlockUntilNextEventMatchingListInModeWithFilter
 #19 _DPSNextEvent
 #20 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #21 -[NSApplication run]
 #22 NSApplicationMain
 #23 EditorMain(int, char const**)
 #24 main
 #25 ???
 #26 ???

Assertion failed on expression: 'state.artifactID == result'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #8 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #9 _dispatch_client_callout
 #10 _dispatch_async_and_wait_invoke
 #11 _dispatch_client_callout
 #12 _dispatch_main_queue_callback_4CF
 #13 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #14 __CFRunLoopRun
 #15 CFRunLoopRunSpecific
 #16 RunCurrentEventLoopInMode
 #17 ReceiveNextEventCommon
 #18 _BlockUntilNextEventMatchingListInModeWithFilter
 #19 _DPSNextEvent
 #20 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #21 -[NSApplication run]
 #22 NSApplicationMain
 #23 EditorMain(int, char const**)
 #24 main
 #25 ???
 #26 ???

Diagnostics callstack to track who triggered the sub-import:
 #5 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #6 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #8 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #9 _dispatch_client_callout
 #10 _dispatch_async_and_wait_invoke
 #11 _dispatch_client_callout
 #12 _dispatch_main_queue_callback_4CF
 #13 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #14 __CFRunLoopRun
 #15 CFRunLoopRunSpecific
 #16 RunCurrentEventLoopInMode
 #17 ReceiveNextEventCommon
 #18 _BlockUntilNextEventMatchingListInModeWithFilter
 #19 _DPSNextEvent
 #20 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #21 -[NSApplication run]
 #22 NSApplicationMain
 #23 EditorMain(int, char const**)
 #24 main
 #25 ???
 #26 ???

Requesting import of Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000), Assets/Resources/Prefabs/Slot.prefab from editor
Resuming Guid(06a12056aef3f458ea896a90f397357c) Importer(-1,00000000000000000000000000000000) -> 0e506c56a4e51c10762390a6340e8b5c 
Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'unsafeDependencies != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'unsafeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'safeMetaInfo != nullptr'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 VerifyArtifactRevisionIntegrityV2(ArtifactKey const&, AssetDatabase::ArtifactID const&)
 #4 core::mutable_function<AssetDatabase::ArtifactID (ArtifactKey const&)>::DispatchT<AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const::'block-literal'::'lambda'(ArtifactKey const&)>::Dispatch(ArtifactKey const&)
 #5 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #6 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #7 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #8 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #9 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #10 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #11 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #12 _dispatch_client_callout
 #13 _dispatch_async_and_wait_invoke
 #14 _dispatch_client_callout
 #15 _dispatch_main_queue_callback_4CF
 #16 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #17 __CFRunLoopRun
 #18 CFRunLoopRunSpecific
 #19 RunCurrentEventLoopInMode
 #20 ReceiveNextEventCommon
 #21 _BlockUntilNextEventMatchingListInModeWithFilter
 #22 _DPSNextEvent
 #23 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #24 -[NSApplication run]
 #25 NSApplicationMain
 #26 EditorMain(int, char const**)
 #27 main
 #28 ???
 #29 ???

Assertion failed on expression: 'state.state == kUpToDate'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #6 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #9 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #10 _dispatch_client_callout
 #11 _dispatch_async_and_wait_invoke
 #12 _dispatch_client_callout
 #13 _dispatch_main_queue_callback_4CF
 #14 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #15 __CFRunLoopRun
 #16 CFRunLoopRunSpecific
 #17 RunCurrentEventLoopInMode
 #18 ReceiveNextEventCommon
 #19 _BlockUntilNextEventMatchingListInModeWithFilter
 #20 _DPSNextEvent
 #21 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #22 -[NSApplication run]
 #23 NSApplicationMain
 #24 EditorMain(int, char const**)
 #25 main
 #26 ???
 #27 ???

Assertion failed on expression: 'state.artifactID == result'
 #0 GetStacktrace(int)
 #1 DebugStringToFile(DebugStringToFileData const&)
 #2 AssertImplementation(int, char const*, int, int, char const*)
 #3 ImporterAssetResolver::ResolveAsset(ArtifactKey const&, AssetDatabase::ImportSyncMode, bool*)
 #4 ResolveArtifactV2(ArtifactKey const&, AssetDatabase::ImportSyncMode)
 #5 PreviewImporter::GenerateAssetData(AssetImportContext&)
 #6 ImportToObjects(core::basic_string<char, core::StringStorageDefault<char> > const&, core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #7 ImportAsset(core::hash_map<AssetDatabase::ImporterID, ImporterInfo, core::hash<AssetDatabase::ImporterID>, std::__1::equal_to<AssetDatabase::ImporterID> > const&, dynamic_array<PostprocessorInfo, 0ul> const&, AssetResolveTracker const&, ImportAssetInputs const&, ImportAssetOutputs&, IImportProgress*)
 #8 AssetImportWorker::Import(AssetResolver&, WorkerImportPayload const&, WorkerImportResponse&, IImportProgress*, bool*)
 #9 invocation function for block in AssetImportWorkerClient::HandleMessage(ImportRequestMessage const&)::$_6::operator()() const
 #10 _dispatch_client_callout
 #11 _dispatch_async_and_wait_invoke
 #12 _dispatch_client_callout
 #13 _dispatch_main_queue_callback_4CF
 #14 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
 #15 __CFRunLoopRun
 #16 CFRunLoopRunSpecific
 #17 RunCurrentEventLoopInMode
 #18 ReceiveNextEventCommon
 #19 _BlockUntilNextEventMatchingListInModeWithFilter
 #20 _DPSNextEvent
 #21 -[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]
 #22 -[NSApplication run]
 #23 NSApplicationMain
 #24 EditorMain(int, char const**)
 #25 main
 #26 ???
 #27 ???

 -> (artifact id: '00000000000000000000000000000000') in 0.098159 seconds  code(4) message(Build asset version error: assets/resources/prefabs/slot.prefab in SourceAssetDB has modification time of '2022-10-14T08:02:03Z' while content on disk has modification time of '2022-10-14T11:14:46Z')
  ERROR: Build asset version error: assets/resources/prefabs/slot.prefab in SourceAssetDB has modification time of '2022-10-14T08:02:03Z' while content on disk has modification time of '2022-10-14T11:14:46Z'
  Import took 0.101008 seconds .

